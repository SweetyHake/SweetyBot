import discord
from discord.ext import commands
from discord import app_commands
from discord.ui import Button, View, UserSelect, Select
import random
import asyncio
from datetime import datetime, timedelta
import json
import os

intents = discord.Intents.all()

TOKEN = ''

def check_inventory_file():
    try:
        with open("obsdata.json", "r") as file:
            pass
    except FileNotFoundError:
        with open("obsdata.json", "w") as file:
            json.dump({}, file, ensure_ascii=False)

def load_data():
    with open("obsdata.json", "r") as file:
        return json.load(file)
    
def save_data(data):
    with open("obsdata.json", "w") as file:
        json.dump(data, file, indent=4, ensure_ascii=False)
    

def check_item(user, item):
    user_id = str(user.name)
    data = load_data()
    if user_id in data and item in data[user_id]["items"]:
        return True
    else:
        return False

def number_item(user, item):
    user_id = str(user.name)
    data = load_data()
    counter = 0
    if user_id in data:
        for dataitem in data[user_id]["items"]:
            if dataitem == item:
                counter+=1
    return counter
    
      
def manage_item(user, item, action):
    user_id = str(user.name)
    data = load_data()
    if user_id not in data:
        data[user_id] = {"items": [], "SP": 50}
    match action:
        case 'add':
            data[user_id]["items"].append(item)
        case 'remove':
            data[user_id]["items"].remove(item)
    save_data(data)

def check_SP(user):
    user_id = str(user.name)
    data = load_data()
    if user_id not in data:
        data[user_id] = {"items": [], "SP": 50}
    SP = data.get(user_id, {}).get("SP", 0)
    return SP

def set_SP(user, amount):
    user_id = str(user.name)
    data = load_data()
    if user_id not in data:
        data[user_id] = {"items": [], "SP": 50}
    data[user_id]["SP"] = amount
    save_data(data)

# –¶–í–ï–¢–ê
red = 0xff0000
yellow = 0xFEE75C
green = 0x287e29
discordcolor = 0x7289da

moderator_list = ['sweetyhake']

peace = False

placeholder = discord.Embed(title='Placeholder',description='',color=yellow)

# –†–û–õ–ò
ROLE0ID = 526308268260458496 # –ú–ê–°–¢–ï–†
ROLE1ID = 1174039269065625610 # –ê–°–ü–ï–ö–¢
ROLE2ID = 1186637073369804891 # –ë–ï–•–û–õ–î–ï–†
ROLE3ID = 1186637174234435664 # –ò–õ–õ–ò–¢–ò–î
ROLE4ID = 1174038780492136508 # –†–´–¶–ê–†–¨
ROLE5ID = 1174038673914875946 # –ì–†–ò–§–û–ù
ROLE6ID = 1174037749683191849 # –ê–í–ê–ù–¢–Æ–†–ò–°–¢
ROLE7ID = 1186637285446393886 # –ñ–ï–õ–ê–¢–ò–ù–û–í–´–ô –ö–£–ë
ROLE8ID = 1174036560707080213 # –ì–û–ë–õ–ò–ù


async def shop (interaction):
        embed = discord.Embed(title='Seventh Shop',description='–ü–æ–∫—É–ø–∞–π—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –∞ –∑–∞—Ç–µ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏—Ö –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è.',color=discordcolor)
        embed.add_field(name=f'', inline=False, value=f'üìÉ **–ö—É—Å–æ—á–µ–∫ —Ç–µ—Ç—Ä–∞–¥–∏ —Å–º–µ—Ä—Ç–∏**\n–ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫—É—Å–æ—á–µ–∫ —Ç–µ—Ç—Ä–∞–¥–∏ —Å–º–µ—Ä—Ç–∏.\n–°—Ç–æ–∏–º–æ—Å—Ç—å: 200 SP.')
        embed.add_field(name=f'', inline=False, value=f'ü§´ **–ù–µ–º–æ—Ç–∞**.\n–ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–º—É—Ç–∏—Ç—å –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n–°—Ç–æ–∏–º–æ—Å—Ç—å: 20 SP.')
        embed.add_field(name=f'', inline=False, value=f'üó£Ô∏è **–°–ª–æ–≤–æ –ø–∞—Ü–∞–Ω–∞**.\n–ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑–º—É—Ç–∏—Ç—å –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ —Å–µ–±—è).\n–°—Ç–æ–∏–º–æ—Å—Ç—å: 10 SP.')
        embed.add_field(name=f'', inline=False, value=f'üõ°Ô∏è **–©–∏—Ç**.\n–ü–∞—Å—Å–∏–≤–Ω–æ: –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –æ–¥–Ω–æ–≥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–ø–∞—Å–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.\n–°—Ç–æ–∏–º–æ—Å—Ç—å: 50 SP.')
        embed.add_field(name=f'', inline=False, value=f'‚öîÔ∏è **–ü–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ**.\n–ü–∞—Å—Å–∏–≤–Ω–æ: –æ—Ç—Ä–∞–∂–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –æ–ø–∞—Å–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–µ–≥–æ –µ–≥–æ.\n–°—Ç–æ–∏–º–æ—Å—Ç—å: 100 SP.')
        embed.add_field(name=f'', inline=False, value=f'üïäÔ∏è **–ü–µ—Ä–µ–º–∏—Ä–∏–µ**.\n–ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–∫–ª—é—á–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–ø–∞—Å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ —á–∞—Å.\n–°—Ç–æ–∏–º–æ—Å—Ç—å: 400 SP.')
        
        buttonmanager = View(timeout=None)
        DeathNote = Button(label='', emoji='üìÉ',style=discord.ButtonStyle.secondary)
        Silence = Button(label='', emoji='ü§´',style=discord.ButtonStyle.secondary)
        Lev = Button(label='', emoji='üó£Ô∏è',style=discord.ButtonStyle.secondary)
        Shield = Button(label='', emoji='üõ°Ô∏è',style=discord.ButtonStyle.secondary)
        Parry = Button(label='', emoji='‚öîÔ∏è',style=discord.ButtonStyle.secondary)
        Peace = Button(label='', emoji='üïäÔ∏è',style=discord.ButtonStyle.secondary)

        async def buttonbuy(interaction, item, price):
            if check_SP(interaction.user) >= price:
                set_SP(interaction.user, check_SP(interaction.user) - price )
                manage_item(interaction.user, item, 'add')
                embed = discord.Embed(title='Seventh Shop',description=f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ {item}.',color=green)
                await interaction.response.send_message(embed=embed, ephemeral = True)
            else:
                embed = discord.Embed(title='Seventh Shop',description=f'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ SP –¥–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è {item}.',color=red)
                await interaction.response.send_message(embed=embed, ephemeral = True)
        async def DeathNoteCallback(interaction:discord.Interaction):
            await buttonbuy(interaction, '–ö—É—Å–æ—á–µ–∫ —Ç–µ—Ç—Ä–∞–¥–∏ —Å–º–µ—Ä—Ç–∏', 200)
        async def SilenceCallback(interaction:discord.Interaction):
            await buttonbuy(interaction, '–ù–µ–º–æ—Ç–∞', 20)
        async def LevCallback(interaction:discord.Interaction):
            await buttonbuy(interaction, '–°–ª–æ–≤–æ –ø–∞—Ü–∞–Ω–∞', 10)
        async def ShieldCallback(interaction:discord.Interaction):
            await buttonbuy(interaction, '–©–∏—Ç', 50)
        async def ParryCallback(interaction:discord.Interaction):
            await buttonbuy(interaction, '–ü–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', 100)
        async def PeaceCallback(interaction:discord.Interaction):
            await buttonbuy(interaction, '–ü–µ—Ä–µ–º–∏—Ä–∏–µ', 400)


        DeathNote.callback = DeathNoteCallback
        Silence.callback = SilenceCallback
        Lev.callback = LevCallback
        Shield.callback = ShieldCallback
        Parry.callback = ParryCallback
        Peace.callback = PeaceCallback

        buttonmanager.add_item(DeathNote)
        buttonmanager.add_item(Silence)
        buttonmanager.add_item(Lev)
        buttonmanager.add_item(Shield)
        buttonmanager.add_item(Parry)
        buttonmanager.add_item(Peace)

        await interaction.response.send_message(embed=embed,view=buttonmanager, ephemeral=True)

async def inventory(interaction):
        embed = discord.Embed(title='–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å',description='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –∫—É–ø–ª–µ–Ω–Ω—ã–µ –≤ –º–∞–≥–∞–∑–∏–Ω–µ.',color=discordcolor)
        embed.add_field(name=f'', inline=False, value=f'üìÉ **–ö—É—Å–æ—á–µ–∫ —Ç–µ—Ç—Ä–∞–¥–∏ —Å–º–µ—Ä—Ç–∏**\n–ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫—É—Å–æ—á–µ–∫ —Ç–µ—Ç—Ä–∞–¥–∏ —Å–º–µ—Ä—Ç–∏.\n–£ –≤–∞—Å: {number_item(interaction.user, '–ö—É—Å–æ—á–µ–∫ —Ç–µ—Ç—Ä–∞–¥–∏ —Å–º–µ—Ä—Ç–∏')}.')
        embed.add_field(name=f'', inline=False, value=f'ü§´ **–ù–µ–º–æ—Ç–∞**.\n–ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–º—É—Ç–∏—Ç—å –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n–£ –≤–∞—Å: {number_item(interaction.user, '–ù–µ–º–æ—Ç–∞')}.')
        embed.add_field(name=f'', inline=False, value=f'üó£Ô∏è **–°–ª–æ–≤–æ –ø–∞—Ü–∞–Ω–∞**.\n–ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑–º—É—Ç–∏—Ç—å –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ —Å–µ–±—è).\n–£ –≤–∞—Å: {number_item(interaction.user, '–°–ª–æ–≤–æ –ø–∞—Ü–∞–Ω–∞')}.')
        embed.add_field(name=f'', inline=False, value=f'üõ°Ô∏è **–©–∏—Ç**.\n–ü–∞—Å—Å–∏–≤–Ω–æ: –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –æ–¥–Ω–æ–≥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–ø–∞—Å–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.\n–£ –≤–∞—Å: {number_item(interaction.user, '–©–∏—Ç')}.')
        embed.add_field(name=f'', inline=False, value=f'‚öîÔ∏è **–ü–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ**.\n–ü–∞—Å—Å–∏–≤–Ω–æ: –æ—Ç—Ä–∞–∂–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –æ–ø–∞—Å–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–µ–≥–æ –µ–≥–æ.\n–£ –≤–∞—Å: {number_item(interaction.user, '–ü–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ')}.')
        embed.add_field(name=f'', inline=False, value=f'üïäÔ∏è **–ü–µ—Ä–µ–º–∏—Ä–∏–µ**.\n–ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–∫–ª—é—á–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–ø–∞—Å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ —á–∞—Å.\n–£ –≤–∞—Å: {number_item(interaction.user, '–ü–µ—Ä–µ–º–∏—Ä–∏–µ')}.')
        
        embedfalse = discord.Embed(title='–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å',description=f'–£ –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.',color=red)
        peaceembed = discord.Embed(title='–ü–µ—Ä–µ–º–∏—Ä–∏–µ',description=f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –æ–±—ä—è–≤–ª–µ–Ω–æ –ø–µ—Ä–µ–º–∏—Ä–∏–µ.',color=green)
        buttonmanager = View(timeout=None)
        DeathNote = Button(label='', emoji='üìÉ',style=discord.ButtonStyle.primary)
        Silence = Button(label='', emoji='ü§´',style=discord.ButtonStyle.primary)
        Lev = Button(label='', emoji='üó£Ô∏è',style=discord.ButtonStyle.primary)
        Shield = Button(label='', emoji='üõ°Ô∏è',style=discord.ButtonStyle.secondary)
        Parry = Button(label='', emoji='‚öîÔ∏è',style=discord.ButtonStyle.secondary)
        Peace = Button(label='', emoji='üïäÔ∏è',style=discord.ButtonStyle.primary)
        mute_role = interaction.guild.get_role(1174411093670637660)
        async def DeathNoteCallback(interaction:discord.Interaction):
            if peace != True:
                if check_item(interaction.user, '–ö—É—Å–æ—á–µ–∫ —Ç–µ—Ç—Ä–∞–¥–∏ —Å–º–µ—Ä—Ç–∏'):
                    await interaction.response.send_modal(DeathNoteModal())
                else: await interaction.response.send_message(embed=embedfalse, ephemeral=True, delete_after=5)
            else: await interaction.response.send_message(embed=peaceembed, ephemeral=True)
        async def SilenceCallback(interaction:discord.Interaction):
            if peace != True:
                if check_item(interaction.user, '–ù–µ–º–æ—Ç–∞'):
                    select = discord.ui.UserSelect(
                        placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                    )
                    async def select_callback(interaction: discord.Interaction):
                        for user in select.values:
                                tuser = user
                        if mute_role not in tuser.roles:
                            if check_item(tuser, '–©–∏—Ç') or check_item(tuser, '–ü–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ'):
                                if check_item(tuser, '–ü–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ'):
                                    try:
                                        await interaction.user.add_roles(mute_role)
                                        current_channel = interaction.user.voice.channel
                                        afk_channel = bot.get_channel(776022980202987520)
                                        await interaction.user.move_to(afk_channel)
                                        await interaction.user.move_to(current_channel)    
                                    except Exception: pass
                                    manage_item(tuser, '–ü–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', 'remove')
                                else:
                                    manage_item(tuser, '–©–∏—Ç', 'remove')
                            else:
                                try:
                                    await tuser.add_roles(mute_role)
                                    current_channel = tuser.voice.channel
                                    afk_channel = bot.get_channel(776022980202987520)
                                    await tuser.move_to(afk_channel)
                                    await tuser.move_to(current_channel)    
                                except Exception: pass
                            manage_item(interaction.user, '–ù–µ–º–æ—Ç–∞', 'remove')
                            embed = discord.Embed(title='–ù–µ–º–æ—Ç–∞',description=f'–í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–ª–æ–∂–∏–ª–∏ –Ω–µ–º–æ—Ç—É –Ω–∞ {tuser.display_name}.',color=green)
                        else:
                            embed = discord.Embed(title='–ù–µ–º–æ—Ç–∞',description=f'{tuser.display_name} —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –¥–µ–π—Å—Ç–≤–∏–µ–º –Ω–µ–º–æ—Ç—ã.',color=red)
                        await interaction.response.edit_message(embed=embed, view=None)
                    viewmanager = View()
                    select.callback = select_callback
                    viewmanager.add_item(select)
                    await interaction.response.send_message('', view=viewmanager, ephemeral=True)
                else: 
                    await interaction.response.send_message(embed=embedfalse, ephemeral=True)
            else: await interaction.response.send_message(embed=embedfalse, ephemeral=True)
        async def LevCallback(interaction:discord.Interaction):
            if peace != True:
                if check_item(interaction.user, '–°–ª–æ–≤–æ –ø–∞—Ü–∞–Ω–∞'):
                    select = discord.ui.UserSelect(
                        placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                    )
                    async def select_callback(interaction: discord.Interaction):
                        for user in select.values:
                            tuser = user
                        if mute_role in tuser.roles:
                            try:
                                await tuser.remove_roles(mute_role)
                                current_channel = tuser.voice.channel
                                afk_channel = bot.get_channel(776022980202987520)
                                await tuser.move_to(afk_channel)
                                await tuser.move_to(current_channel)    
                            except Exception: pass
                            embed = discord.Embed(title='–°–ª–æ–≤–æ –ø–∞—Ü–∞–Ω–∞',description=f'–í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ –Ω–µ–º–æ—Ç—É —Å {tuser.display_name}.',color=green)
                            manage_item(interaction.user, '–°–ª–æ–≤–æ –ø–∞—Ü–∞–Ω–∞', 'remove')
                        else: 
                            embed = discord.Embed(title='–°–ª–æ–≤–æ –ø–∞—Ü–∞–Ω–∞',description=f'–ù–∞ {tuser.display_name} –Ω–µ—Ç –Ω–µ–º–æ—Ç—ã.', color=red)
                        await interaction.response.edit_message(embed=embed, view=None)
                    viewmanager = View()
                    select.callback = select_callback
                    viewmanager.add_item(select)
                    await interaction.response.send_message('', view=viewmanager, ephemeral=True)
                else:  await interaction.response.send_message(embed=embedfalse)
            else: await interaction.response.send_message(embed=peaceembed, ephemeral=True)
        async def ShieldCallback(interaction:discord.Interaction):
            passive = discord.Embed(title='–©–∏—Ç', description='–≠—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–∞—Å—Å–∏–≤–Ω–æ.', color=yellow)
            await interaction.response.send_message(embed=passive, ephemeral=True)
        async def ParryCallback(interaction:discord.Interaction):
            passive = discord.Embed(title='–ü–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', description='–≠—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–∞—Å—Å–∏–≤–Ω–æ.', color=yellow)
            await interaction.response.send_message(embed=passive, ephemeral=True)
        async def PeaceCallback(interaction:discord.Interaction):                   
            if peace != True:
                if check_item(interaction.user, '–ü–µ—Ä–µ–º–∏—Ä–∏–µ'):
                    peace = True
                    manage_item(interaction.user, '–ü–µ—Ä–µ–º–∏—Ä–∏–µ', 'remove')
                    embed = discord.Embed(title='–ü–µ—Ä–µ–º–∏—Ä–∏–µ', description='–í—ã –æ–±—ä—è–≤–∏–ª–∏ –ø–µ—Ä–µ–º–∏—Ä–∏–µ –Ω–∞ 1 —á–∞—Å.', color=green)
                    await interaction.response.send_message(embed=embed)
                else: await interaction.response.send_message(embed=embedfalse, ephemeral=True)
            else:
                    embed = discord.Embed(title='–ü–µ—Ä–µ–º–∏—Ä–∏–µ', description='–ü–µ—Ä–µ–º–∏—Ä–∏–µ —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω–æ.', color=red)
                    await interaction.response.send_message(embed=embed)


        DeathNote.callback = DeathNoteCallback
        Silence.callback = SilenceCallback
        Lev.callback = LevCallback
        Shield.callback = ShieldCallback
        Parry.callback = ParryCallback
        Peace.callback = PeaceCallback

        buttonmanager.add_item(DeathNote)
        buttonmanager.add_item(Silence)
        buttonmanager.add_item(Lev)
        buttonmanager.add_item(Shield)
        buttonmanager.add_item(Parry)
        buttonmanager.add_item(Peace)

        await interaction.response.send_message(embed=embed,view=buttonmanager, ephemeral=True)
class Cf(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
    @discord.ui.button(label='–ü—Ä–∞–≤–∏–ª–∞',emoji='üìë',style=discord.ButtonStyle.primary, custom_id='rules')
    async def rules(self, interaction:discord.Interaction, Button: discord.ui.Button):
        embed = discord.Embed(title='–ü—Ä–∞–≤–∏–ª–∞',description='',color=discordcolor)
        embed.add_field(name='–û–±—â–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è', inline=False, value='–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ—Å—É—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–Ω—ã—Ö –Ω–∏–∂–µ –ø—É–Ω–∫—Ç–æ–≤ –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Ö —Ä–æ–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.\n–ó–∞–ø—Ä–µ—â–µ–Ω–æ –ø—É–±–ª–∏—á–Ω–æ–µ –∏ —Å–ª–∏—à–∫–æ–º –∂–µ—Å—Ç–æ–∫–æ–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å—Ç–µ–ø–µ–Ω—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ–º).\n–ó–∞–ø—Ä–µ—â–µ–Ω—ã –ª—é–±—ã–µ –≤–∏–¥—ã —Ñ–ª—É–¥–∞.\n–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è–º –º–æ–¥–µ—Ä–∞—Ü–∏–∏ (—Ä–æ–ª–∏ –ê—Å–ø–µ–∫—Ç –∏ –ë–µ—Ö–æ–ª–¥–µ—Ä) –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –ø—Ä–∞–≤–∞–º–∏ –∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–∞–º–æ—É–ø—Ä–∞–≤—Å—Ç–≤–æ–º.')
        embed.add_field(name='–ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã', inline=False,value='–ó–∞–ø—Ä–µ—â–µ–Ω–æ –≤–∫–ª—é—á–∞—Ç—å –º—É–∑—ã–∫—É —á–µ—Ä–µ–∑ –º–∏–∫—Ä–æ—Ñ–æ–Ω (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ—Ç–∞ –∏–ª–∏ Youtube Together).\n–ó–∞–ø—Ä–µ—â–µ–Ω–æ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≥—Ä–æ–º–∫–∏–º–∏ –∑–≤—É–∫–∞–º–∏ —á–µ—Ä–µ–∑ –º–∏–∫—Ä–æ—Ñ–æ–Ω (–∫—Ä–∏–∫–∏, –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–µ –∑–≤—É–∫–∏ –∏ —Ç.–¥.).\n–ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö —à—É–º–æ–≤ –∫—Ä–∞–π–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é Push-to-Talk.')
        embed.add_field(name='–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', inline=False,value='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–ø—Ä–∞–≤–µ —Ç—Ä–µ–±–æ–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–∞ –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏, –µ—Å–ª–∏ —Å—á–∏—Ç–∞–µ—Ç, —á—Ç–æ –æ–Ω–∏ –æ—Å–∫–æ—Ä–±–ª—è—é—Ç –∫–æ–≥–æ-–ª–∏–±–æ.')
        embed.add_field(name='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è', inline=False, value='–í–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ –Ω–µ–¥–æ–ø–æ–Ω–∏–º–∞–Ω–∏–π –≤—Å–µ —Å–ø–æ—Ä–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ —Å–ª–µ–¥—É–µ—Ç —Ä–µ—à–∞—Ç—å —á–µ—Ä–µ–∑ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.\n–ü—Ä–∏ –Ω–∞—á–∞–ª–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞, –æ—Ç—Ä–∞–∂–∞—é—â–∞—è —Å–º—ã—Å–ª –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.')
        await interaction.response.send_message(embed=embed, ephemeral=True)
    @discord.ui.button(label='–¶–≤–µ—Ç',style=discord.ButtonStyle.primary, emoji='üé®',custom_id='color')
    async def pcolor(self, interaction:discord.Interaction, Button: discord.ui.Button):
        await color(interaction=interaction)
    @discord.ui.button(label='–ò–∫–æ–Ω–∫–∞',style=discord.ButtonStyle.primary, emoji='ü•∏' , custom_id='icon')
    async def picon(self, interaction:discord.Interaction, Button: discord.ui.Button):
        await icon(interaction=interaction)
    @discord.ui.button(label='–ö–æ–º–∞–Ω–¥—ã',emoji='‚ùì',style=discord.ButtonStyle.primary, custom_id='commands')
    async def commandlist(self, interaction:discord.Interaction, Button: discord.ui.Button):
        embed = discord.Embed(title='–ö–æ–º–∞–Ω–¥—ã',description='',color=discordcolor)
        embed.add_field(name='/–∫–æ–º–Ω–∞—Ç–∞', inline=False, value='–ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É **/–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å**, —á—Ç–æ–±—ã –¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –∫–∞–Ω–∞–ª–∞–º —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º. –ö–∞–Ω–∞–ª —É–Ω–∏—á—Ç–æ–∂–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–∫–∏–¥–∞—é—Ç –µ–≥–æ.')
        embed.add_field(name='/–∫–æ—Å—Ç—å', inline=False,value='–ü–æ–∑–≤–æ–ª—è–µ—Ç –±—Ä–æ—Å–∏—Ç—å –∏–≥—Ä–∞–ª—å–Ω—É—é –∫–æ—Å—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —á–∏—Å–µ–ª.')
        embed.add_field(name='/–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', inline=False,value='–ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ #–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏–π/–ø–æ–Ω–∏–∂–µ–Ω–∏–π, –º—É—Ç–∞, —Ç–∞–π–º-–∞—É—Ç–∞ –∏ –¥–∞–∂–µ –∫–∏–∫–∞ —Å –±–∞–Ω–æ–º.')
        embed.add_field(name='/—Ä—É—Å—Å–∫–∞—è—Ä—É–ª–µ—Ç–∫–∞', inline=False, value='–°—ã–≥—Ä–∞–π—Ç–µ –≤ —Å–º–µ—Ä—Ç–µ–ª—å–Ω—É—é –∏–≥—Ä—É –æ–¥–∏–Ω, –∏–ª–∏ —Å–æ —Å–≤–æ–∏–º–∏ –¥—Ä—É–∑—å—è–º–∏. –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏—Ö –∂–¥—ë—Ç –Ω–∞–∫–∞–∑–∞–Ω–∏–µ, –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä—ã.')
        await interaction.response.send_message(embed=embed, ephemeral=True)
    @discord.ui.button(label='–†–æ–ª–∏',emoji='üì∂',style=discord.ButtonStyle.primary, custom_id='roles')
    async def roleslist(self, interaction:discord.Interaction, Button: discord.ui.Button):
        –ú–∞—Å—Ç–µ—Ä = interaction.guild.get_role(ROLE0ID)
        –ê—Å–ø–µ–∫—Ç = interaction.guild.get_role(ROLE1ID)
        –ë–µ—Ö–æ–ª–¥–µ—Ä = interaction.guild.get_role(ROLE2ID)
        –ò–ª–ª–∏—Ç–∏–¥ = interaction.guild.get_role(ROLE3ID)
        –†—ã—Ü–∞—Ä—å = interaction.guild.get_role(ROLE4ID)
        –ì—Ä–∏—Ñ–æ–Ω = interaction.guild.get_role(ROLE5ID)
        –ê–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç = interaction.guild.get_role(ROLE6ID)
        –ñ–ö—É–± = interaction.guild.get_role(ROLE7ID)
        –ì–æ–±–ª–∏–Ω = interaction.guild.get_role(ROLE8ID)

        embed = discord.Embed(title='–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏',description='–†–æ–ª–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –ø–æ—Ä—è–¥–∫–µ —É–º–µ–Ω—å—à–µ–Ω–∏—è —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑. –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –º–µ–∂–¥—É –Ω–∏–º–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –ø–æ–º–æ—â—å—é –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.',color=discordcolor)

        embed.add_field(name=f'', inline=False, value=f'{–ú–∞—Å—Ç–µ—Ä.mention}\n–í—ã—Å—à–∞—è —Ä–æ–ª—å, –æ–±–ª–∞–¥–∞—é—â–∞—è –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –î–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à—å –æ–¥–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –∏, –∫–∞–∫ —è —Å–ª—ã—à–∞–ª, –æ–Ω –µ—â–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –º–µ–Ω—è–ª—Å—è.')
        embed.add_field(name=f'', inline=False, value=f'{–ê—Å–ø–µ–∫—Ç.mention}\n–†–æ–ª—å, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –¥–æ—Å—Ç–∏–≥—à–∞—è –±–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø–æ–ª—É—á–∏–≤—à–∞—è –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ —Å–∏–ª—ã. –û–±–ª–∞–¥–∞–Ω–∏–µ —Ç–∞–∫–æ–π —Å–∏–ª–æ–π –Ω–µ –º–µ–Ω–µ–µ –±–æ–ª—å—à–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.')
        embed.add_field(name=f'', inline=False,value=f'{–ë–µ—Ö–æ–ª–¥–µ—Ä.mention}\n–í—ã –±–ª–∏–∑–∫–∏ –∫ –≤–µ—Ä—Ö—É—à–∫–µ. –í–Ω—É—Ç—Ä–∏ –≤–∞—Å –Ω–∞—á–∏–Ω–∞—é—Ç –ø—Ä–æ—è–≤–ª—è—Ç—å—Å—è –∞–¥–º–∏–Ω—Å–∫–∏–µ —Å–∏–ª—ã.')
        embed.add_field(name=f'', inline=False,value=f'{–ò–ª–ª–∏—Ç–∏–¥.mention}\n–í—ã –æ—Å–æ–±–∞—è –ª–∏—á–Ω–æ—Å—Ç—å. –ö–∞–∫ –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏, —Ç–∞–∫ –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏.')
        embed.add_field(name=f'', inline=False, value=f'{–†—ã—Ü–∞—Ä—å.mention}\n–í—ã –ø—Ä–æ—è–≤–∏–ª–∏ —Å–µ–±—è –¥–æ—Å—Ç–æ–π–Ω—ã–º —á–ª–µ–Ω–æ–º –æ–±—â–µ—Å—Ç–≤–∞. –í–∞—Å —É–≤–∞–∂–∞—é—Ç –¥–∞–∂–µ —Ç–µ, –∫—Ç–æ —Å—Ç–æ–∏—Ç –Ω–∞–¥ –≤–∞–º–∏.')
        embed.add_field(name=f'', inline=False, value=f'{–ì—Ä–∏—Ñ–æ–Ω.mention}\n–ù–µ–±–æ–ª—å—à–æ–π —à–∞–≥ –ø–æ –∫–∞—Ä—å–µ—Ä–Ω–æ–π –ª–µ—Å—Ç–Ω–∏—Ü–µ, –Ω–æ –≤–∞—à–∏ –ø—Ä–∞–≤–∞ –≤—Å–µ –µ—â–µ —É—Å—Ç—É–ø–∞—é—Ç –≤—ã—à–µ—Å—Ç–æ—è—â–∏–º.')
        embed.add_field(name=f'', inline=False, value=f'{–ê–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç.mention}\n–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ä–æ–ª—å –ª—é–±–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
        embed.add_field(name=f'', inline=False, value=f'{–ñ–ö—É–±.mention}\n–í–∏–¥–∏–º–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –≤ –æ–±–ª–∏–∫–µ —á–µ–ª–æ–≤–µ–∫–∞ –≤–∞–º –Ω–∞—Å–∫—É—á–∏–ª–æ, –ø–æ—ç—Ç–æ–º—É –≤—ã —Ä–µ—à–∏–ª–∏ —Å—Ç–∞—Ç—å –æ–ø–∞—Å–Ω—ã–º –º–æ–Ω—Å—Ç—Ä–æ–º. –ù–µ –æ–∂–∏–¥–∞–π—Ç–µ, —á—Ç–æ –∫ –≤–∞–º –±—É–¥—É—Ç –æ—Ç–Ω–æ—Å–∏—Ç—å—Å—è —Ç–∞–∫–∂–µ, –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ.')
        embed.add_field(name=f'', inline=False, value=f'{–ì–æ–±–ª–∏–Ω.mention}\nPathetic.')
        await interaction.response.send_message(embed=embed, ephemeral=True)
    @discord.ui.button(label='–ë–∞–ª–∞–Ω—Å',style=discord.ButtonStyle.primary, emoji='‚ÑπÔ∏è', custom_id='balance' )
    async def balance(self, interaction:discord.Interaction, Button:discord.ui.Button):
        embed = discord.Embed(title='Seventh Bank',description=f'–í–∞—à –±–∞–ª–∞–Ω—Å: {check_SP(interaction.user)} Seventh Points.',color=discordcolor)
        await interaction.response.send_message('', embed=embed, ephemeral=True)
    @discord.ui.button(label='–ú–∞–≥–∞–∑–∏–Ω',style=discord.ButtonStyle.primary, emoji='üõí', custom_id='shop' )
    async def shopcall(self, interaction:discord.Interaction, Button:discord.ui.Button):
        await shop(interaction)
    @discord.ui.button(label='–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å',style=discord.ButtonStyle.primary, emoji='üß∞', custom_id='inventory' )
    async def inventorycall(self, interaction:discord.Interaction, Button:discord.ui.Button):
        await inventory(interaction)
    @discord.ui.button(label='–†—É–ª–µ—Ç–∫–∞',style=discord.ButtonStyle.primary, emoji='üé∞', custom_id='spin' )
    async def spin(self, interaction:discord.Interaction, Button:discord.ui.Button):
        embed = discord.Embed(title='–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ',description='',color=red)
        await interaction.response.send_message(embed=embed, ephemeral=True)
    @discord.ui.button(label='–î–æ–Ω–∞—Ç',style=discord.ButtonStyle.red, emoji='üí≤', custom_id='donation', disabled=True )
    async def donation(self, interaction:discord.Interaction, Button:discord.ui.Button):
        return
    
class PersistentViewBot(commands.Bot):
    def __init__(self):
        intents = discord.Intents.all()
        super().__init__(command_prefix=commands.when_mentioned_or('!'),intents=intents)
    async def setup_hook(self) -> None:
        self.add_view(Cf())

bot = PersistentViewBot()

@bot.tree.command(name="–ø—Ä–µ–¥–º–µ—Ç", description='–ü—Ä–µ–¥–º–µ—Ç—ã')
@app_commands.choices(–¥–µ–π—Å—Ç–≤–∏–µ=[
    app_commands.Choice(name="–í—ã–¥–∞—Ç—å", value='add'),
    app_commands.Choice(name="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", value='check'),
    app_commands.Choice(name="–£–¥–∞–ª–∏—Ç—å", value='remove'),
    ])
async def items(interaction:discord.Interaction, –¥–µ–π—Å—Ç–≤–∏–µ: app_commands.Choice[str], item_name: str):
    if interaction.user.guild_permissions.administrator or interaction.user.name in moderator_list:
      match –¥–µ–π—Å—Ç–≤–∏–µ.value:
        case 'add':
            manage_item(interaction.user, item_name, 'add')
            await interaction.response.send_message(f"{item_name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.", ephemeral=True)
        case 'check':
            if check_item(interaction.user, item_name) == True:
                await interaction.response.send_message(f"{item_name} –µ—Å—Ç—å —É –≤–∞—Å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ.", ephemeral=True)
            else:
                await interaction.response.send_message(f"{item_name} –Ω–µ—Ç —É –≤–∞—Å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ.", ephemeral=True)
        case 'remove':
            manage_item(interaction.user, item_name, 'remove')
            await interaction.response.send_message(f"{item_name} —É–±—Ä–∞–Ω –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è.", ephemeral=True)
    else: await interaction.response.send_message(f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)

class DeathNoteModal(discord.ui.Modal):
    def __init__(self):
        super().__init__(title="–ö—É—Å–æ—á–µ–∫ —Ç–µ—Ç—Ä–∞–¥–∏ —Å–º–µ—Ä—Ç–∏")
        today = datetime.today()

        self.name = discord.ui.TextInput(
            label="–ò–º—è [–í –¥–∏—Å–∫–æ—Ä–¥–µ, –∞ –Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ]",
            placeholder=f"scowpio",
            style=discord.TextStyle.short,
        )
        self.date = discord.ui.TextInput(
            label="–î–∞—Ç–∞ —Å–º–µ—Ä—Ç–∏ [–ö–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ / –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ]",
            placeholder=f"{today.day}.{today.month}.{today.year} {today.hour}:{today.minute+1}",
            style=discord.TextStyle.short,
            required=False,
        )
        self.reason = discord.ui.TextInput(
            label="–ü—Ä–∏—á–∏–Ω–∞ —Å–º–µ—Ä—Ç–∏ [–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ]",
            placeholder="–†–∞–∑–æ—Ä–≤–∞–ª–æ –∂–æ–ø—É –æ—Ç –≥–æ—Ä–æ—Ö–æ–≤–æ–≥–æ —Å—É–ø–∞",
            style=discord.TextStyle.long,       
            required=False,     
        )

        self.add_item(self.name)
        self.add_item(self.date)
        self.add_item(self.reason)

    async def on_submit(self, interaction: discord.Interaction):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        manage_item(interaction.user, '–ö—É—Å–æ—á–µ–∫ —Ç–µ—Ç—Ä–∞–¥–∏ —Å–º–µ—Ä—Ç–∏', 'remove')
        datetext = self.date.value
        if self.reason.value == '': reason = '–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–¥—Ü–∞'
        else: reason = self.reason.value
        try:
            date = datetime.strptime(datetext, "%d.%m.%Y %H:%M")
            datevalue = int(date.timestamp())
            temp = datetime.now()
            temp = int(temp.timestamp())
            
        except Exception:
            date = datetime.now() + timedelta(seconds=40)
            datevalue = int(date.timestamp())
            temp = datetime.now()
            temp = int(temp.timestamp())

        embed = discord.Embed(title='–ö—É—Å–æ—á–µ–∫ —Ç–µ—Ç—Ä–∞–¥–∏ —Å–º–µ—Ä—Ç–∏',description=f"–í—ã –∑–∞–ø–∏—Å–∞–ª–∏ {self.name.value} –≤ —Ç–µ—Ç—Ä–∞–¥—å —Å–º–µ—Ä—Ç–∏. –î–∞—Ç–∞ —Å–º–µ—Ä—Ç–∏: {date}, –ø—Ä–∏—á–∏–Ω–∞ —Å–º–µ—Ä—Ç–∏: {reason}.",color=green)
        await interaction.response.send_message(embed=embed, ephemeral=True)

        for member in interaction.guild.members:
            if member.name == self.name.value:
                target = member
                break
        
        await asyncio.sleep(datevalue - temp)

        if check_item(target, '–©–∏—Ç') or check_item(target, '–ü–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ'):
            if check_item(target, '–ü–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ'):
                try:
                    manage_item(interaction.user, '–ü–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', 'remove')
                    await interaction.user.timeout(timedelta(seconds=60), reason=reason)
                    print (f"{interaction.user.name} —É–±–∏–ª —Å–∞–º —Å–µ–±—è, –ø—ã—Ç–∞—è—Å—å —É–±–∏—Ç—å {target.display_name}. –î–∞—Ç–∞ —Å–º–µ—Ä—Ç–∏: {date}, –ø—Ä–∏—á–∏–Ω–∞ —Å–º–µ—Ä—Ç–∏: {reason}. –ü—Ä–∏—á–∏–Ω–∞: –ü–∞—Ä–∏—Ä–æ–≤–∞–ª –∞—Ç–∞–∫—É.")
                except Exception: pass
            else: 
                manage_item(interaction.user, '–©–∏—Ç', 'remove')
                print (f"{target.display_name} –Ω–µ –±—ã–ª —É–±–∏—Ç {interaction.user.name}, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–∏—Å–∞–ª –µ–≥–æ –≤ —Ç–µ—Ç—Ä–∞–¥—å —Å–º–µ—Ä—Ç–∏. –ü—Ä–∏—á–∏–Ω–∞: –ó–∞—â–∏—Ç–∏–ª—Å—è —â–∏—Ç–æ–º.")

        else:
            try: 
                await target.timeout(timedelta(seconds=60), reason=reason)
                print (f"{target.display_name} –±—ã–ª —É–±–∏—Ç {interaction.user.name}, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–∏—Å–∞–ª –µ–≥–æ –≤ —Ç–µ—Ç—Ä–∞–¥—å —Å–º–µ—Ä—Ç–∏. –î–∞—Ç–∞ —Å–º–µ—Ä—Ç–∏: {date}, –ø—Ä–∏—á–∏–Ω–∞ —Å–º–µ—Ä—Ç–∏: {reason}.")
            except Exception: print (f"{target.display_name} –Ω–µ –±—ã–ª —É–±–∏—Ç {interaction.user.name}, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–∏—Å–∞–ª –µ–≥–æ –≤ —Ç–µ—Ç—Ä–∞–¥—å —Å–º–µ—Ä—Ç–∏. –ü—Ä–∏—á–∏–Ω–∞: –û—à–∏–±–∫–∞.")

@bot.tree.command(name="sp", description='Seventh Points')
@app_commands.choices(–¥–µ–π—Å—Ç–≤–∏–µ=[
    app_commands.Choice(name="–≤—ã–¥–∞—Ç—å", value='add'),
    app_commands.Choice(name="–±–∞–ª–∞–Ω—Å", value='check'),
    app_commands.Choice(name="—É–±—Ä–∞—Ç—å", value='remove'),
    app_commands.Choice(name="—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", value='set')
    ])
async def SP(interaction:discord.Interaction, tuser: discord.User, –¥–µ–π—Å—Ç–≤–∏–µ: app_commands.Choice[str], value: int = 0):
    match –¥–µ–π—Å—Ç–≤–∏–µ.value:
        case 'add':
            set_SP(tuser, check_SP(tuser) + value)
            await interaction.response.send_message(f"–ù–∞ —Å—á–µ—Ç {tuser.display_name} –±—ã–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ {value} SP.", ephemeral=True)
        case 'check':
            await interaction.response.send_message(f"–ë–∞–ª–∞–Ω—Å {tuser.display_name}: {check_SP(tuser)} SP.", ephemeral=True)
        case 'remove':
            set_SP(tuser, check_SP(tuser) - value)
            await interaction.response.send_message(f"–° —Å—á–µ—Ç–∞ {tuser.display_name} –±—ã–ª–æ —Å–ø–∏—Å–∞–Ω–æ {value} SP.", ephemeral=True)

@bot.tree.command(name='test')
async def cf(interaction:discord.Interaction):
    if interaction.user.name == 'sweetyhake':
        embed = discord.Embed(title='–ú–µ–Ω—é',description='–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏, —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏, –∞ —Ç–∞–∫–∂–µ –ø–æ–º–µ–Ω—è–π—Ç–µ —Ü–≤–µ—Ç —Å–≤–æ–µ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞ –∏–ª–∏ –∏–∫–æ–Ω–∫—É –ø–µ—Ä–µ–¥ –Ω–∏–º. ',color=discordcolor)
        channel = await interaction.guild.fetch_channel(1004019014030348318)
        message = await channel.fetch_message(1221106464509263912)
        await message.delete()
        # await channel.send(content='', embed=embed, view=Cf(), silent=True)

# –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤
votes = {}
roulette = {}
excluded_role_id = 1174107082044215366
votes_channel = 1174092147079778305
afk_channel = 1006141707705929870

# –¢–†–ï–®–•–û–õ–î–´ –ù–ê–°–¢–†–û–ô–ö–ò
thresholds = {
    '–º—É—Ç': 1,
    '–±–∞–Ω': 8,
    '–∫–∏–∫': 7,
    '—Ç–∞–π–º-–∞—É—Ç': 3,
    '–ø–æ–≤—ã—Å': 4,
    '–ø–æ–Ω–∏–∂': 4
}

# –ú–ê–°–°–ò–í –í–†–ï–ú–ï–ù–ù–´–• –ö–ê–ù–ê–õ–û–í
tempchannels = []


# –ó–ê–©–ò–¢–ê –†–û–õ–ï–ô
defence = {
 526308268260458496 : 5, 
 1174039269065625610 : 2.25, 
 1186637073369804891 : 2, 
 1186637174234435664 : 1.75, 
 1174038780492136508 : 1.5, 
 1174038673914875946 : 1.25, 
 1174037749683191849 : 1, 
 1186637285446393886 : 0.75, 
 1174036560707080213 : 0.5
}

roles = [526308268260458496, # 0
         1174039269065625610, # 1
         1186637073369804891, # 2
         1186637174234435664, # 3
         1174038780492136508, # 4
         1174038673914875946, # 5
         1174037749683191849, # 6
         1186637285446393886 , # 7
         1174036560707080213  # 8
         ]



@bot.event
async def on_ready():
    synced = await bot.tree.sync()
    synced = len(synced)
    print(f'–ù–µ–Ω–∞–≤–∏–∂—É —Å—Ç—Ä–µ–ª—è—Ç—å –≤—Ä–∞–≥–∞–º –≤ —Å–ø–∏–Ω—É... {bot.user.name} –≤ —Å–µ—Ç–∏. –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ {synced} –∫–æ–º–∞–Ω–¥.')
    check_inventory_file()

@bot.tree.command(name="–∫–æ—Å—Ç—å", description='–ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–≤–µ—Ä—à–∏—Ç—å –±—Ä–æ—Å–æ–∫ –∏–≥—Ä–∞–ª—å–Ω–æ–π –∫–æ—Å—Ç–∏.')
@app_commands.choices(–∫–æ—Å—Ç—å=[
    app_commands.Choice(name="D4", value=4),
    app_commands.Choice(name="D6", value=6),
    app_commands.Choice(name="D8", value=8),
    app_commands.Choice(name="D10", value=10),
    app_commands.Choice(name="D12", value=12),
    app_commands.Choice(name="D20", value=20),
    app_commands.Choice(name="D100", value=100),
    ])
@app_commands.describe(–∫–æ—Å—Ç—å='–ö–æ—Å—Ç—å.' )
async def dice(interaction:discord.Interaction, –∫–æ—Å—Ç—å: app_commands.Choice[int]):
    result = random.randint(1,–∫–æ—Å—Ç—å.value)
    title = '–í—ã–ø–∞–≤—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: **{}**.'.format(result)
    match result:
        case 1: 
            embed = discord.Embed(title=title,description='',color=red)
        case –∫–æ—Å—Ç—å.value: 
            embed = discord.Embed(title=title,description='',color=green)
        case _: 
            embed = discord.Embed(title=title,description='',color=discordcolor)
    match –∫–æ—Å—Ç—å.value:
        case 4: embed.set_thumbnail(url='https://images.vexels.com/media/users/3/232406/isolated/preview/6c9c601abfe8aad6bb82455ff6cbce10-d4-rpg-dice-stroke.png')
        case 6: embed.set_thumbnail(url='https://images.vexels.com/media/users/3/232403/isolated/preview/ee0a1d4d0c3eafaaf9e1ebc052000311-d6-rpg-dice-stroke.png')
        case 8: embed.set_thumbnail(url='https://images.vexels.com/media/users/3/232404/isolated/preview/fda92d8391e57c3b0ac16b9d9adc14d9-d8-rpg-dice-stroke.png')
        case 10: embed.set_thumbnail(url='https://images.vexels.me/media/users/3/232408/isolated/preview/ef74c25cdf596b2a0825d6810297c18a-d10-rpg-dice-stroke.png')
        case 12: embed.set_thumbnail(url='https://images.vexels.com/media/users/3/232405/isolated/preview/2756b6ed4ab2b4e7e2c070a061876b8b-d12-rpg-dice-stroke.png') 
        case 20: embed.set_thumbnail(url='https://images.vexels.com/media/users/3/232402/isolated/preview/577188470e86ba1944f70149d08ea858-d20-rpg-dice-stroke.png')
        case 100: embed.set_thumbnail(url='https://static.wikia.nocookie.net/bindingofisaacre_gamepedia/images/2/29/D100_giantbook.png/revision/latest?cb=20230111001913')
    embed.set_author(name=f'{interaction.user.display_name} —Å–æ–≤–µ—Ä—à–∞–µ—Ç –±—Ä–æ—Å–æ–∫ {–∫–æ—Å—Ç—å.name}.',icon_url=interaction.user.avatar)
    await interaction.response.send_message(embed=embed)


@bot.tree.command(name="–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ", description='–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ.')
@app_commands.choices(–¥–µ–π—Å—Ç–≤–∏–µ=[
    app_commands.Choice(name="–ú—É—Ç/–†–∞–∑–º—É—Ç", value="–º—É—Ç"),
    app_commands.Choice(name="–ö–∏–∫", value="–∫–∏–∫"),
    app_commands.Choice(name="–ë–∞–Ω", value="–±–∞–Ω"),
    app_commands.Choice(name="–¢–∞—É–º-–∞—É—Ç", value="—Ç–∞–π–º-–∞—É—Ç"),
    app_commands.Choice(name="–ü–æ–≤—ã—Å–∏—Ç—å", value="–ø–æ–≤—ã—Å"),
    app_commands.Choice(name="–ü–æ–Ω–∏–∑–∏—Ç—å", value="–ø–æ–Ω–∏–∂"),
    ])
@app_commands.describe(–¥–µ–π—Å—Ç–≤–∏–µ='–î–µ–π—Å—Ç–≤–∏–µ.' )
@app_commands.describe(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å='@–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.' )
@app_commands.choices(–∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å=[
    app_commands.Choice(name="–í–∫–ª—é—á–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å", value=1),
    app_commands.Choice(name="–í—ã–∫–ª—é—á–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å", value=0),
    ])
@app_commands.describe(–∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å='–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å.' )
@app_commands.describe(–ø—Ä–∏—á–∏–Ω–∞ = '–ü—Ä–∏—á–∏–Ω–∞.')
@app_commands.describe(–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å = '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.')
async def vote(interaction:discord.Interaction, –¥–µ–π—Å—Ç–≤–∏–µ: app_commands.Choice[str], –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: discord.User, –ø—Ä–∏—á–∏–Ω–∞: str, –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å: app_commands.Choice[int] = 0, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: int = 0):
        error = False

        try:
            –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å = –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å.value
        except Exception: –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å = –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å

        match –¥–µ–π—Å—Ç–≤–∏–µ.value:
                    case '–º—É—Ç':
                        –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å = limit(–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, 1, 30)
                    case '–±–∞–Ω':
                        –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å = limit(–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, 20, 1440)
                    case '–∫–∏–∫':
                        –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å = limit(–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, 15, 1440)
                    case '—Ç–∞–π–º-–∞—É—Ç':
                        –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å = limit (–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, 5, 30)
                    case '–ø–æ–≤—ã—Å':
                        –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å = limit (–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, 5, 1440)
                    case '–ø–æ–Ω–∏–∂':
                        –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å = limit (–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, 5, 1440)


        userdefence = defence[roles[getroleID(interaction.guild, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)]]

        threshold = round(thresholds[–¥–µ–π—Å—Ç–≤–∏–µ.value] * userdefence)

        match –¥–µ–π—Å—Ç–≤–∏–µ.value:
            case '–±–∞–Ω': title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ: –ó–∞–±–∞–Ω–∏—Ç—å {}'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
            case '—Ç–∞–π–º-–∞—É—Ç': title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ: –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Ç–∞–π–º-–∞—É—Ç {}'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
            case '–∫–∏–∫': title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ: –ò–∑–≥–Ω–∞—Ç—å {}'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
            case '–º—É—Ç':
                mute_role = interaction.guild.get_role(1174411093670637660)
                if mute_role in –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.roles: title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ: –†–∞–∑–º—É—Ç–∏—Ç—å {}'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
                else: title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ: –ó–∞–º—É—Ç–∏—Ç—å {}'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
            case '–ø–æ–≤—ã—Å': title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ: –ü–æ–≤—ã—Å–∏—Ç—å {}'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
            case '–ø–æ–Ω–∏–∂': title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ: –ü–æ–Ω–∏–∑–∏—Ç—å {}'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
        
        description='–ü—Ä–∏—á–∏–Ω–∞: {}\n–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–ª–∏—Ç—Å—è {} –º–∏–Ω.\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ **üëç** –∏ **üëé**, —á—Ç–æ–±—ã –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å.'.format(–ø—Ä–∏—á–∏–Ω–∞,–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)

        embed = discord.Embed(title=title,description=description,color=discordcolor)
        embed.set_author(name=f'–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª {interaction.user.display_name}.', icon_url=interaction.user.avatar)
        embed.set_thumbnail(url=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.avatar)




        VoteYes = Button(label='', emoji='üëç',style=discord.ButtonStyle.green)
        VoteNo = Button(label='', emoji='üëé', style=discord.ButtonStyle.red)
        VoteInfo = Button(label='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', style=discord.ButtonStyle.primary)
        VoteEnd = Button(label='–ó–∞–≤–µ—Ä—à–∏—Ç—å', style=discord.ButtonStyle.secondary)

        buttonManager = View(timeout = None)

        async def YesCallback(interaction: discord.Interaction):
            if interaction.user.name not in votes[msg.id]['VotersYES']:
                if interaction.user.name in votes[msg.id]['VotersNO']:
                    votes[msg.id]['VotersNO'].remove(interaction.user.name)
                    text = '–í—ã –∏–∑–º–µ–Ω–∏–ª–∏ —Å–≤–æ–π –≥–æ–ª–æ—Å —Å –ü–†–û–¢–ò–í –Ω–∞ –ó–ê.'
                else:
                    text = '–í—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –ó–ê.'
                votes[msg.id]['VotersYES'].append(interaction.user.name)
                await interaction.response.send_message (text, ephemeral=True, delete_after=5)
            else: await interaction.response.send_message ('–í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –ó–ê.', ephemeral=True, delete_after=5)
        
        async def NoCallback(interaction: discord.Interaction):
            if interaction.user.name not in votes[msg.id]['VotersNO']:
                if interaction.user.name in votes[msg.id]['VotersYES']:
                    votes[msg.id]['VotersYES'].remove(interaction.user.name)
                    text = '–í—ã –∏–∑–º–µ–Ω–∏–ª–∏ —Å–≤–æ–π –≥–æ–ª–æ—Å —Å –ó–ê –Ω–∞ –ü–†–û–¢–ò–í.'
                else:
                    text = '–í—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –ü–†–û–¢–ò–í.'
                votes[msg.id]['VotersNO'].append(interaction.user.name)
                await interaction.response.send_message (text, ephemeral=True, delete_after=5)
            else: await interaction.response.send_message ('–í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –ü–†–û–¢–ò–í.', ephemeral=True, delete_after=5)

        async def InfoCallback(interaction: discord.Interaction):

            match –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å:
                case 1: desc = '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏—Ö:\n\n**–ó–ê:** {}.\n**–ü–†–û–¢–ò–í**: {}.\n\n–¢—Ä–µ–±—É–µ–º–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –≥–æ–ª–æ—Å–∞–º–∏: {} / {}.'.format(len(votes[msg.id]['VotersYES']), len(votes[msg.id]['VotersNO']), limit(len(votes[msg.id]['VotersYES']) - len(votes[msg.id]['VotersNO']), 0, threshold), threshold)
                case _:
                    VotersYes = ', '.join(votes[msg.id]['VotersYES'])
                    VotersNo = ', '.join(votes[msg.id]['VotersNO'])
                    desc = '–°–ø–∏—Å–∫–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏—Ö:\n\n**–ó–ê:** {} ({}).\n**–ü–†–û–¢–ò–í**: {} ({}).\n\n–¢—Ä–µ–±—É–µ–º–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –≥–æ–ª–æ—Å–∞–º–∏: {} / {}.'.format(VotersYes, len(votes[msg.id]['VotersYES']), VotersNo, len(votes[msg.id]['VotersNO']), limit(len(votes[msg.id]['VotersYES']) - len(votes[msg.id]['VotersNO']), 0, threshold), threshold)
            
            embed = discord.Embed(title=title,description=desc,color=discordcolor)
            embed.set_author(name=f'–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª {interaction.user.display_name}.', icon_url=interaction.user.avatar)
            embed.set_footer(text=f'–í—Ä–µ–º—è –¥–æ –∫–æ–Ω—Ü–∞: {votes[msg.id]['–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å']//60} –º–∏–Ω—É—Ç(—ã), {votes[msg.id]['–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å']%60} —Å–µ–∫—É–Ω–¥(—ã).')
            embed.set_thumbnail(url=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.avatar) 
            await interaction.response.send_message (embed=embed, ephemeral=True, delete_after=10)

        async def EndCallback(interaction: discord.Interaction):
            if interaction.user.guild_permissions.administrator or interaction.user.name == 'sweetyhake':
                votes[msg.id]['–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'] = 0
                await interaction.response.send_message ('–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –¥–æ—Å—Ä–æ—á–Ω–æ.', ephemeral=True, delete_after=5)
            else:
                await interaction.response.send_message ('–î–æ—Å—Ä–æ—á–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.', ephemeral=True, delete_after=5)
            
        VoteYes.callback = YesCallback
        VoteNo.callback = NoCallback
        VoteInfo.callback = InfoCallback
        VoteEnd.callback = EndCallback

        buttonManager.add_item(VoteYes)
        buttonManager.add_item(VoteNo)
        buttonManager.add_item(VoteInfo)
        buttonManager.add_item(VoteEnd)

        vote_channel = bot.get_channel(votes_channel)
        msg = await vote_channel.send(embed=embed, view = buttonManager)
        await interaction.response.send_message(f'–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞—Ç–æ –≤ –∫–∞–Ω–∞–ª–µ {vote_channel.mention}.', ephemeral=True)

        votes[msg.id] = {'VotersYES': [], 'VotersNO': [], '–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å': –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å*60}

        while votes[msg.id]['–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'] > 0:
            votes[msg.id]['–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'] -= 1
            await asyncio.sleep(1)
        
        result = False
        if len(votes[msg.id]['VotersYES']) - len(votes[msg.id]['VotersNO']) >= threshold: result = True

        Vote = f'–ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è {len(votes[msg.id]['VotersYES'])} –ó–ê vs {len(votes[msg.id]['VotersNO'])} –ü–†–û–¢–ò–í.'
        match –¥–µ–π—Å—Ç–≤–∏–µ.value:
            case '–º—É—Ç':
                mute_role = interaction.guild.get_role(1174411093670637660)
                
                if mute_role in –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.roles:
                    match result:
                        case True:
                            description='{} –±—ã–ª —Ä–∞–∑–º—É—á–µ–Ω –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
                            try: 
                                await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.remove_roles(mute_role)
                                current_channel = interaction.user.voice.channel
                                afk_channel = bot.get_channel(776022980202987520)
                                await interaction.user.move_to(afk_channel)
                                await interaction.user.move_to(current_channel)                                
                            except Exception:
                                error = True   
                            
                        case False:
                            description='{} –Ω–µ –±—ã–ª —Ä–∞–∑–º—É—á–µ–Ω –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
                else:   
                    match result:
                        case True:
                            description='{} –±—ã–ª –∑–∞–º—É—á–µ–Ω –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
                            try: 
                                await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.add_roles(mute_role)
                                current_channel = interaction.user.voice.channel
                                afk_channel = bot.get_channel(776022980202987520)
                                await interaction.user.move_to(afk_channel)
                                await interaction.user.move_to(current_channel)                                
                            except Exception:
                                error = True                    

                        case False:
                            description='{} –Ω–µ –±—ã–ª –∑–∞–º—É—á–µ–Ω –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
            case '–∫–∏–∫':
                match result:
                    case True:
                        description='{} –±—ã–ª –∏–∑–≥–Ω–∞–Ω –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
                        try:
                            await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.kick(–ø—Ä–∏—á–∏–Ω–∞ = Vote)
                        except Exception:
                            error = True
                    case False:
                        description='{} –Ω–µ –±—ã–ª –∏–∑–≥–Ω–∞–Ω –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
            case '–±–∞–Ω':
                match result:
                    case True:
                        description='{} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
                        try:
                            await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.ban(–ø—Ä–∏—á–∏–Ω–∞ = Vote)
                        except Exception:
                            error = True
                    case False:
                        description='{} –Ω–µ –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
            case '–ø–æ–≤—ã—Å':
                match result:
                    case True: 
                        role = getroleID(interaction.guild, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
                        try:
                            await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.remove_roles(interaction.guild.get_role(roles[role]))
                            await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.add_roles(interaction.guild.get_role(roles[role-1]))
                        except Exception:
                            error = True
                        description='{} –±—ã–ª –ø–æ–≤—ã—à–µ–Ω –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
                    case False:
                        description='{} –Ω–µ –±—ã–ª –ø–æ–≤—ã—à–µ–Ω –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
            case '–ø–æ–Ω–∏–∂':
                match result:
                    case True:
                        role = getroleID(interaction.guild, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
                        try:
                            await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.remove_roles(interaction.guild.get_role(roles[role]))
                            await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.add_roles(interaction.guild.get_role(roles[role+1]))
                        except Exception:
                            error = True
                        description='{} –±—ã–ª –ø–æ–Ω–∏–∂–µ–Ω –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
                    case False:
                        description='{} –Ω–µ –±—ã–ª –ø–æ–Ω–∏–∂–µ–Ω –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
            case '—Ç–∞–π–º-–∞—É—Ç':
                match result:
                    case True:
                        description='{} –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ç–∞–π–º-–∞—É—Ç –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)
                        try:
                            await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.timeout(timedelta(seconds=1200), reason=Vote)
                        except Exception:
                            error = True
                    case False:
                        description='{} –Ω–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ç–∞–π–º-–∞—É—Ç –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.'.format(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name)

        match –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å:
            case 1:
                extrainfo = '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏—Ö:\n\n**–ó–ê:** {}.\n**–ü–†–û–¢–ò–í**: {}.\n\n–¢—Ä–µ–±—É–µ–º–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –≥–æ–ª–æ—Å–∞–º–∏: {} / {}.'.format(len(votes[msg.id]['VotersYES']), len(votes[msg.id]['VotersNO']), limit(len(votes[msg.id]['VotersYES']) - len(votes[msg.id]['VotersNO']), 0, threshold), threshold)
            case _:
                VotersYes = ', '.join(votes[msg.id]['VotersYES'])
                VotersNo = ', '.join(votes[msg.id]['VotersNO'])
                extrainfo = '–°–ø–∏—Å–∫–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏—Ö:\n\n**–ó–ê:** {} ({}).\n**–ü–†–û–¢–ò–í**: {} ({}).\n\n–¢—Ä–µ–±—É–µ–º–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –≥–æ–ª–æ—Å–∞–º–∏: {} / {}.'.format(VotersYes, len(votes[msg.id]['VotersYES']), VotersNo, len(votes[msg.id]['VotersNO']), limit(len(votes[msg.id]['VotersYES']) - len(votes[msg.id]['VotersNO']), 0, threshold), threshold)

        if error == True:
            extrainfo = '–í–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ—Å—å–±–∞ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –±–æ–≥–æ–º, —Ç–æ–ª—å–∫–æ –æ–Ω —Ä–∞–∑–±–µ—Ä–µ—Ç—å—Å—è –≤ —ç—Ç–æ–º –¥–µ—Ä—å–º–µ...'
            embed = discord.Embed(title=description,description=extrainfo,color=yellow)
        else:
            match result:
                case True: embed = discord.Embed(title=description,description=extrainfo,color=green)
                case False: embed = discord.Embed(title=description,description=extrainfo,color=red)

        embed.set_author(name=interaction.user.display_name, icon_url=interaction.user.avatar)
        embed.set_thumbnail(url=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.avatar)

        await msg.edit(embed=embed, view=None)


@bot.tree.command(name="—Ü–≤–µ—Ç", description='–ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ü–≤–µ—Ç –≤–∞—à–µ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞.')
async def colorcommand(interaction: discord.Interaction):
    await color(interaction=interaction)

async def color(interaction):
    embed = discord.Embed(title='–í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞',description='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É —Ü–≤–µ—Ç–∞, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –µ–≥–æ.\n\n–ö—Ä–æ–º–µ —Ç–æ–≥–æ, –Ω–∞–∂–º–∏—Ç–µ ‚ùå, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —Ü–≤–µ—Ç.',color=discordcolor)
    embed.set_author(name='–¶–≤–µ—Ç–æ–≤—ã–±–∏—Ä–∞–ª–∫–∞ v3 Lite')

    red = interaction.guild.get_role(1136001363734691970)
    yellow = interaction.guild.get_role(1136001365815078962)
    green = interaction.guild.get_role(1132760058124578926)
    blue = interaction.guild.get_role(1136001356650532874)
    white = interaction.guild.get_role(1136004517117317310)
    purple = interaction.guild.get_role(1136001372190408885)
    pink = interaction.guild.get_role(1188642076414459984)
    orange = interaction.guild.get_role(1136001389798113521)
    black = interaction.guild.get_role(1136004568333963406)

    colors = [
        interaction.guild.get_role(1136001363734691970), 
        interaction.guild.get_role(1136001365815078962), 
        interaction.guild.get_role(1132760058124578926), 
        interaction.guild.get_role(1136001356650532874),
        interaction.guild.get_role(1136004517117317310),
        interaction.guild.get_role(1136001372190408885),
        interaction.guild.get_role(1188642076414459984),
        interaction.guild.get_role(1136001389798113521),
        interaction.guild.get_role(1136004568333963406)
    ]

    buttonManager = View(timeout=None)
    ColorReset = Button(label='', emoji='‚ùå',style=discord.ButtonStyle.primary)
    ColorRed = Button(label='', emoji='‚ù§Ô∏è',style=discord.ButtonStyle.secondary)
    ColorYellow = Button(label='', emoji='üíõ',style=discord.ButtonStyle.secondary)
    ColorGreen = Button(label='', emoji='üíö',style=discord.ButtonStyle.secondary)
    ColorBlue = Button(label='', emoji='üíô',style=discord.ButtonStyle.secondary)
    ColorWhite = Button(label='', emoji='ü§ç',style=discord.ButtonStyle.secondary)
    ColorPurple = Button(label='', emoji='üíú',style=discord.ButtonStyle.secondary)
    ColorPink = Button(label='', emoji='ü©∑',style=discord.ButtonStyle.secondary)
    ColorOrange = Button(label='', emoji='üß°',style=discord.ButtonStyle.secondary)
    ColorBlack = Button(label='', emoji='üñ§',style=discord.ButtonStyle.secondary)


    async def select_color(interaction: discord.Interaction, color: str = None):

        for role in colors:
            if role in interaction.user.roles: await interaction.user.remove_roles(role)

        match color:
            case None: await interaction.response.send_message('–¶–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ —É–±—Ä–∞–Ω.',ephemeral=True, delete_after=180)
            case _: 
                await interaction.user.add_roles(color)
                await interaction.response.send_message('–¶–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω.',ephemeral=True, delete_after=180)

    async def RedCallback(interaction: discord.Interaction):
        await select_color(interaction, red)

    async def YellowCallback(interaction: discord.Interaction):
        await select_color(interaction, yellow)

    async def GreenCallback(interaction: discord.Interaction):
        await select_color(interaction, green)

    async def BlueCallback(interaction: discord.Interaction):
        await select_color(interaction, blue)

    async def WhiteCallback(interaction: discord.Interaction):
        await select_color(interaction, white)

    async def PurpleCallback(interaction: discord.Interaction):
        await select_color(interaction, purple)

    async def PinkCallback(interaction: discord.Interaction):
        await select_color(interaction, pink)

    async def OrangeCallback(interaction: discord.Interaction):
        await select_color(interaction, orange)

    async def BlackCallback(interaction: discord.Interaction):
        await select_color(interaction, black)

    
    ColorReset.callback = select_color
    ColorRed.callback = RedCallback
    ColorYellow.callback = YellowCallback
    ColorGreen.callback = GreenCallback
    ColorBlue.callback = BlueCallback
    ColorWhite.callback = WhiteCallback
    ColorPurple.callback = PurpleCallback
    ColorPink.callback = PinkCallback
    ColorOrange.callback = OrangeCallback
    ColorBlack.callback = BlackCallback
    
    buttonManager.add_item(ColorReset)
    buttonManager.add_item(ColorRed)
    buttonManager.add_item(ColorPink)
    buttonManager.add_item(ColorOrange)
    buttonManager.add_item(ColorYellow)
    buttonManager.add_item(ColorGreen)
    buttonManager.add_item(ColorBlue)
    buttonManager.add_item(ColorPurple)
    buttonManager.add_item(ColorWhite)
    buttonManager.add_item(ColorBlack)
    
    await interaction.response.send_message(embed=embed,view=buttonManager,ephemeral=True)

@bot.tree.command(name="–∏–∫–æ–Ω–∫–∞", description='–ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –∏–∫–æ–Ω–∫—É –ø–µ—Ä–µ–¥ –≤–∞—à–∏–º –Ω–∏–∫–Ω–µ–π–º–æ–º.')
async def iconcommand(interaction:discord.Interaction):
    await icon(interaction=interaction)

async def icon(interaction): 
    
    mainembed = discord.Embed(title='–í—ã–±–æ—Ä –∏–∫–æ–Ω–∫–∏',description='–ù–∞–∂–º–∏—Ç–µ ‚ùå, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∏–∫–æ–Ω–∫—É.\n\nüçï - –∏–∫–æ–Ω–∫–∏ –µ–¥—ã.\n\nüê∑ - –∏–∫–æ–Ω–∫–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö.\n\nü§° - –¥—Ä—É–≥–∏–µ –∏–∫–æ–Ω–∫–∏.',color=discordcolor)
    mainembed.set_author(name='–ò–∫–æ–Ω–∫–æ–≤—ã–±–∏—Ä–∞–ª–∫–∞ v1')

    icons = [
        # –ï–î–ê
        interaction.guild.get_role(1218875100842164317), # tomato
        interaction.guild.get_role(1218875781422383175), # eggplant
        interaction.guild.get_role(1218875808362270760), # banana
        interaction.guild.get_role(1218875829237448774), # peach
        interaction.guild.get_role(1218875847445053442), # pepper
        interaction.guild.get_role(1218875944606109746), # beer
        interaction.guild.get_role(1218875881288630344), # cookie
        interaction.guild.get_role(1218875994308345956), # burger
        interaction.guild.get_role(1218876017758830662), # pizza

        # –ñ–ò–í–û–¢–ù–´–ï 
        interaction.guild.get_role(1218876044032086066), # pig
        interaction.guild.get_role(1218876071685128303), # cow
        interaction.guild.get_role(1218876088453955704), # mouse
        interaction.guild.get_role(1218876118686236805), # panda
        interaction.guild.get_role(1218876112533454858), # hamster
        interaction.guild.get_role(1218876160079954021), # boar
        interaction.guild.get_role(1218876186550210651), # octopus
        interaction.guild.get_role(1218876207337308180), # bear
        interaction.guild.get_role(1218876249833869412), # monkey

        # –û–°–¢–ê–õ–¨–ù–û–ï 

        interaction.guild.get_role(1218876270985740398), # dice
        interaction.guild.get_role(1218876296323665991), # clown
        interaction.guild.get_role(1218876320076005396), # skelet
        interaction.guild.get_role(1218876347162824774), # devil
        interaction.guild.get_role(1218876369598156881), # bomb
        interaction.guild.get_role(1218876404544831550), # halloween
        interaction.guild.get_role(1218876440649666610), # alien
        interaction.guild.get_role(1218876465735798865), # cowboy
        interaction.guild.get_role(1218876491119726642), # poop
    ]

    buttonManager = View(timeout=None)

    IconReset = Button(label='', emoji='‚ùå',style=discord.ButtonStyle.primary)
    FoodIcon = Button(label='–ï–î–ê', emoji='üçï',style=discord.ButtonStyle.secondary)
    AnimalsIcon = Button(label='–ñ–ò–í–û–¢–ù–´–ï', emoji='üê∑',style=discord.ButtonStyle.secondary)
    OtherIcon = Button(label='–î–†–£–ì–ò–ï', emoji='ü§°',style=discord.ButtonStyle.secondary)

    async def ReturnCallback(interaction: discord.Interaction):
            await interaction.response.edit_message(embed=mainembed,view=buttonManager)

    
    async def select_icon(interaction: discord.Interaction, icon: str = None):

        for role in icons:
            if role in interaction.user.roles:  await interaction.user.remove_roles(role)

        match icon:
            case None: 
                await interaction.response.send_message('–ò–∫–æ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–±—Ä–∞–Ω–∞.',ephemeral=True, delete_after=180)
            case _:
                await interaction.user.add_roles(icons[icon])
                await interaction.response.send_message('–ò–∫–æ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω–∞.',ephemeral=True, delete_after=180)

    async def FoodCallback(interaction: discord.Interaction):
            embed = discord.Embed(title='–ò–∫–æ–Ω–∫–∏: –ï–¥–∞',description='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –µ—ë.',color=discordcolor)
            embed.set_author(name='–ò–∫–æ–Ω–∫–æ–≤—ã–±–∏—Ä–∞–ª–∫–∞ v1')
            buttonManagerFood = View(timeout = None)

            IconReturn = Button(label='', emoji='‚Ü©Ô∏è',style=discord.ButtonStyle.primary)
            IconTomato = Button(label='', emoji='üçÖ',style=discord.ButtonStyle.secondary)
            IconEggplant = Button(label='', emoji='üçÜ',style=discord.ButtonStyle.secondary)
            IconBanana = Button(label='', emoji='üçå',style=discord.ButtonStyle.secondary)
            IconPeach = Button(label='', emoji='üçë',style=discord.ButtonStyle.secondary)
            IconPepper = Button(label='', emoji='üå∂Ô∏è',style=discord.ButtonStyle.secondary)
            IconBeer = Button(label='', emoji='üç∫',style=discord.ButtonStyle.secondary)
            IconCookie = Button(label='', emoji='üç™',style=discord.ButtonStyle.secondary)
            IconBurger = Button(label='', emoji='üçî',style=discord.ButtonStyle.secondary)
            IconPizza = Button(label='', emoji='üçï',style=discord.ButtonStyle.secondary)

            async def TomatoCallback(interaction: discord.Interaction):
                await select_icon(interaction, 0)
            async def EggplantCallback(interaction: discord.Interaction):
                await select_icon(interaction, 1)
            async def BananaCallback(interaction: discord.Interaction):
                await select_icon(interaction, 2)            
            async def PeachCallback(interaction: discord.Interaction):
                await select_icon(interaction, 3)            
            async def PepperCallback(interaction: discord.Interaction):
                await select_icon(interaction, 4)            
            async def BeerCallback(interaction: discord.Interaction):
                await select_icon(interaction, 5)            
            async def CookieCallback(interaction: discord.Interaction):
                await select_icon(interaction, 6)   
            async def BurgerCallback(interaction: discord.Interaction):
                await select_icon(interaction, 7)
            async def PizzaCallback(interaction: discord.Interaction):
                await select_icon(interaction, 8)  

            IconReturn.callback = ReturnCallback
            IconTomato.callback = TomatoCallback
            IconEggplant.callback = EggplantCallback
            IconBanana.callback = BananaCallback
            IconPeach.callback = PeachCallback
            IconPepper.callback = PepperCallback
            IconBeer.callback = BeerCallback
            IconCookie.callback = CookieCallback
            IconBurger.callback = BurgerCallback
            IconPizza.callback = PizzaCallback
    
            buttonManagerFood.add_item(IconReturn)
            buttonManagerFood.add_item(IconTomato)
            buttonManagerFood.add_item(IconEggplant)
            buttonManagerFood.add_item(IconBanana)
            buttonManagerFood.add_item(IconPeach)
            buttonManagerFood.add_item(IconPepper)
            buttonManagerFood.add_item(IconBeer)
            buttonManagerFood.add_item(IconCookie)
            buttonManagerFood.add_item(IconBurger)
            buttonManagerFood.add_item(IconPizza)

            await interaction.response.edit_message(embed=embed,view=buttonManagerFood)

    async def AnimalsCallback(interaction: discord.Interaction):
            embed = discord.Embed(title='–ò–∫–æ–Ω–∫–∏: –ñ–∏–≤–æ—Ç–Ω—ã–µ',description='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –µ—ë.',color=discordcolor)
            embed.set_author(name='–ò–∫–æ–Ω–∫–æ–≤—ã–±–∏—Ä–∞–ª–∫–∞ v1')
            buttonManagerFood = View(timeout = None)

            IconReturn = Button(label='', emoji='‚Ü©Ô∏è',style=discord.ButtonStyle.primary)
            Icon1 = Button(label='', emoji='üê∑',style=discord.ButtonStyle.secondary)
            Icon2 = Button(label='', emoji='üêÆ',style=discord.ButtonStyle.secondary)
            Icon3 = Button(label='', emoji='üê≠',style=discord.ButtonStyle.secondary)
            Icon4 = Button(label='', emoji='üêº',style=discord.ButtonStyle.secondary)
            Icon5 = Button(label='', emoji='üêπ',style=discord.ButtonStyle.secondary)
            Icon6 = Button(label='', emoji='üêó',style=discord.ButtonStyle.secondary)
            Icon7 = Button(label='', emoji='üêô',style=discord.ButtonStyle.secondary)
            Icon8 = Button(label='', emoji='üêª',style=discord.ButtonStyle.secondary)
            Icon9 = Button(label='', emoji='üêµ',style=discord.ButtonStyle.secondary)

            async def Callback1(interaction: discord.Interaction):
                await select_icon(interaction, 0+8+1)
            async def Callback2(interaction: discord.Interaction):
                await select_icon(interaction, 1+8+1)
            async def Callback3(interaction: discord.Interaction):
                await select_icon(interaction, 2+8+1)            
            async def Callback4(interaction: discord.Interaction):
                await select_icon(interaction, 3+8+1)            
            async def Callback5(interaction: discord.Interaction):
                await select_icon(interaction, 4+8+1)            
            async def Callback6(interaction: discord.Interaction):
                await select_icon(interaction, 5+8+1)            
            async def Callback7(interaction: discord.Interaction):
                await select_icon(interaction, 6+8+1)   
            async def Callback8(interaction: discord.Interaction):
                await select_icon(interaction, 7+8+1)
            async def Callback9(interaction: discord.Interaction):
                await select_icon(interaction, 8+8+1)  

            IconReturn.callback = ReturnCallback
            Icon1.callback = Callback1
            Icon2.callback = Callback2
            Icon3.callback = Callback3
            Icon4.callback = Callback4
            Icon5.callback = Callback5
            Icon6.callback = Callback6
            Icon7.callback = Callback7
            Icon8.callback = Callback8
            Icon9.callback = Callback9
    
            buttonManagerFood.add_item(IconReturn)
            buttonManagerFood.add_item(Icon1)
            buttonManagerFood.add_item(Icon2)
            buttonManagerFood.add_item(Icon3)
            buttonManagerFood.add_item(Icon4)
            buttonManagerFood.add_item(Icon5)
            buttonManagerFood.add_item(Icon6)
            buttonManagerFood.add_item(Icon7)
            buttonManagerFood.add_item(Icon8)
            buttonManagerFood.add_item(Icon9)

            await interaction.response.edit_message(embed=embed,view=buttonManagerFood)       

    async def OtherCallback(interaction: discord.Interaction):
            embed = discord.Embed(title='–ò–∫–æ–Ω–∫–∏: –î—Ä—É–≥–∏–µ',description='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –µ—ë.',color=discordcolor)
            embed.set_author(name='–ò–∫–æ–Ω–∫–æ–≤—ã–±–∏—Ä–∞–ª–∫–∞ v1')
            buttonManagerFood = View(timeout = None)

            IconReturn = Button(label='', emoji='‚Ü©Ô∏è',style=discord.ButtonStyle.primary)
            Icon1 = Button(label='', emoji='üé≤',style=discord.ButtonStyle.secondary)
            Icon2 = Button(label='', emoji='ü§°',style=discord.ButtonStyle.secondary)
            Icon3 = Button(label='', emoji='üíÄ',style=discord.ButtonStyle.secondary)
            Icon4 = Button(label='', emoji='üòà',style=discord.ButtonStyle.secondary)
            Icon5 = Button(label='', emoji='üí£',style=discord.ButtonStyle.secondary)
            Icon6 = Button(label='', emoji='üéÉ',style=discord.ButtonStyle.secondary)
            Icon7 = Button(label='', emoji='üëΩ',style=discord.ButtonStyle.secondary)
            Icon8 = Button(label='', emoji='ü§†',style=discord.ButtonStyle.secondary)
            Icon9 = Button(label='', emoji='üí©',style=discord.ButtonStyle.secondary)

            async def Callback1(interaction: discord.Interaction):
                await select_icon(interaction, 0+16+2)
            async def Callback2(interaction: discord.Interaction):
                await select_icon(interaction, 1+8+8+2)
            async def Callback3(interaction: discord.Interaction):
                await select_icon(interaction, 2+8+8+2)            
            async def Callback4(interaction: discord.Interaction):
                await select_icon(interaction, 3+8+8+2)            
            async def Callback5(interaction: discord.Interaction):
                await select_icon(interaction, 4+8+8+2)            
            async def Callback6(interaction: discord.Interaction):
                await select_icon(interaction, 5+8+8+2)            
            async def Callback7(interaction: discord.Interaction):
                await select_icon(interaction, 6+8+8+2)   
            async def Callback8(interaction: discord.Interaction):
                await select_icon(interaction, 7+8+8+2)
            async def Callback9(interaction: discord.Interaction):
                await select_icon(interaction, 8+8+8+2)  

            IconReturn.callback = ReturnCallback
            Icon1.callback = Callback1
            Icon2.callback = Callback2
            Icon3.callback = Callback3
            Icon4.callback = Callback4
            Icon5.callback = Callback5
            Icon6.callback = Callback6
            Icon7.callback = Callback7
            Icon8.callback = Callback8
            Icon9.callback = Callback9
    
            buttonManagerFood.add_item(IconReturn)
            buttonManagerFood.add_item(Icon1)
            buttonManagerFood.add_item(Icon2)
            buttonManagerFood.add_item(Icon3)
            buttonManagerFood.add_item(Icon4)
            buttonManagerFood.add_item(Icon5)
            buttonManagerFood.add_item(Icon6)
            buttonManagerFood.add_item(Icon7)
            buttonManagerFood.add_item(Icon8)
            buttonManagerFood.add_item(Icon9)

            await interaction.response.edit_message(embed=embed,view=buttonManagerFood)      
    
    IconReset.callback = select_icon
    FoodIcon.callback = FoodCallback
    AnimalsIcon.callback = AnimalsCallback
    OtherIcon.callback = OtherCallback

    
    
    buttonManager.add_item(FoodIcon)
    buttonManager.add_item(AnimalsIcon)
    buttonManager.add_item(OtherIcon)
    buttonManager.add_item(IconReset)

    
    await interaction.response.send_message(embed=mainembed,view=buttonManager,ephemeral=True)

def limit (number, minim, maxim):
     if number <= minim: return minim
     elif number >= maxim: return maxim
     else: return number


def getroleID (guild, user):
    if guild.get_role(ROLE0ID) in user.roles: return 0
    elif guild.get_role(ROLE1ID) in user.roles: return 1
    elif guild.get_role(ROLE2ID) in user.roles: return 2
    elif guild.get_role(ROLE3ID) in user.roles: return 3
    elif guild.get_role(ROLE4ID) in user.roles: return 4
    elif guild.get_role(ROLE5ID) in user.roles: return 5
    elif guild.get_role(ROLE6ID) in user.roles: return 6
    elif guild.get_role(ROLE7ID) in user.roles: return 7
    elif guild.get_role(ROLE8ID) in user.roles: return 8
    else: return 6



@bot.tree.command(name='–∫–æ–º–Ω–∞—Ç–∞', description='–ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª.')
@app_commands.describe(name='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π.' )
@app_commands.describe(limit = '–ü—Ä–∏—á–∏–Ω–∞.')
@app_commands.choices(private=[
    app_commands.Choice(name="–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª.", value=False),
    app_commands.Choice(name="–û–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã–π –∫–∞–Ω–∞–ª.", value=True),
    ])
@app_commands.describe(private='–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –∫–∞–Ω–∞–ª–∞.' )
@app_commands.choices(hidden=[
    app_commands.Choice(name="–°–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª.", value=False),
    app_commands.Choice(name="–í–∏–¥–∏–º—ã–π –∫–∞–Ω–∞–ª.", value=True),
    ])
@app_commands.describe(hidden='–í–∏–¥–∏–º–æ—Å—Ç—å –∫–∞–Ω–∞–ª–∞.' )
async def createchannel(interaction: discord.Interaction, name: str = None, limit: int = 0, private: app_commands.Choice[int] = True, hidden: app_commands.Choice[int] = True):
    match name: 
        case None: name = f'–î–æ–º–µ–Ω {interaction.user.display_name}'

    everyone = discord.PermissionOverwrite()
    if private == True: everyone.connect = True
    else: everyone.connect = False
    if hidden == True: everyone.view_channel = True
    else: everyone.view_channel = False
    userr = discord.PermissionOverwrite()
    userr.manage_channels = True
    userr.manage_permissions = True
    userr.connect = True
    userr.view_channel = True
    voice = await interaction.guild.create_voice_channel(category=interaction.guild.get_channel(798113553210146837),user_limit=limit,name=name, overwrites={interaction.guild.default_role: everyone, interaction.user: userr})
    try: await interaction.user.move_to(channel=voice)
    except Exception: pass
    await interaction.response.send_message(f'–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {voice} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.', ephemeral=True, delete_after=5)
    await asyncio.sleep(10)
    tempchannels.append(voice)
    if len(voice.members) == 0:
        try: 
            await voice.delete()
            print (f'–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {voice} –±—ã–ª —É–¥–∞–ª—ë–Ω.')
        except Exception: pass

@bot.event
async def on_voice_state_update(member, before, after):
    if before.channel in tempchannels:
        if after.channel is not before:
            if len(before.channel.members) == 0:
                await asyncio.sleep(3)
                if len(before.channel.members) == 0:
                    try: 
                        await before.channel.delete()
                        print (f'–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {before.channel} –±—ã–ª —É–¥–∞–ª—ë–Ω.')
                    except Exception: pass
                
@bot.tree.command(name='—Ä—É—Å—Å–∫–∞—è—Ä—É–ª–µ—Ç–∫–∞', description='–°—ã–≥—Ä–∞–π—Ç–µ –≤ —ç—Ç—É —Å–º–µ—Ä—Ç–µ–ª—å–Ω—É—é –∏–≥—Ä—É —Å –¥—Ä—É–∑—å—è–º–∏.')
@app_commands.choices(bullet=[
    app_commands.Choice(name="1 –ø–∞—Ç—Ä–æ–Ω", value=1),
    app_commands.Choice(name="2 –ø–∞—Ç—Ä–æ–Ω–∞", value=2),
    app_commands.Choice(name="3 –ø–∞—Ç—Ä–æ–Ω–∞", value=3),
    app_commands.Choice(name="4 –ø–∞—Ç—Ä–æ–Ω–∞", value=4),
    app_commands.Choice(name="5 –ø–∞—Ç—Ä–æ–Ω–æ–≤", value=5),
    ])
@app_commands.describe(bullet='–ó–∞—Ä—è–¥–∏—Ç—å –≤ —Ä–µ–≤–æ–ª—å–≤–µ—Ä...' )
@app_commands.choices(penalty=[
    app_commands.Choice(name="–ü–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω—ã–π –º—É—Ç.", value='–º—É—Ç'),
    app_commands.Choice(name="–¢–∞–π–º-–∞—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç.", value='—Ç–∞–π–º-–∞—É—Ç'),
    app_commands.Choice(name="–ü–æ–Ω–∏–∂–µ–Ω–∏–µ.", value='–ø–æ–Ω–∏–∂'),
    app_commands.Choice(name="–ò–∑–≥–Ω–∞–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–∞.", value='–º—É—Ç'),
    ])
@app_commands.describe(penalty='–ù–∞–∫–∞–∑–∞–Ω–∏–µ –∑–∞ —Å–º–µ—Ä—Ç—å.' )
async def russianroulette(interaction:discord.Interaction, bullet: app_commands.Choice[int], penalty: app_commands.Choice[str]):

    JoinButton = Button(label='–ü–†–ò–°–û–ï–î–ï–ù–ò–¢–¨–°–Ø',style=discord.ButtonStyle.primary)
    LeaveButton = Button(label='–ü–û–ö–ò–ù–£–¢–¨',style=discord.ButtonStyle.secondary)
    StartButton = Button(label='–ù–ê–ß–ê–¢–¨',style=discord.ButtonStyle.green)

    buttonManagerMenu = View(timeout=None)

    penalty_name = penalty.name
    penalty_value = penalty.value

    owner = interaction.user

    async def JoinCallback(interaction: discord.Interaction):
        if  interaction.user not in roulette[msg.id]['alive']:
            roulette[msg.id]['alive'].append(interaction.user)
            await interaction.response.send_message('–í—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –∏–≥—Ä—É.',ephemeral=True)
            players = []
            for player in roulette[msg.id]['alive']:
                players.append(player.display_name)
            players = ', '.join(players)
            description = '–ü—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç–µ—Å—å –∫ –∏–≥—Ä–µ, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É **[–ü–†–ò–°–û–ï–î–ï–ù–ò–¢–¨–°–Ø]** –Ω–∏–∂–µ.\n\n–¢–µ–∫—É—â–∏–µ –∏–≥—Ä–æ–∫–∏: {}\n\n–°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–Ω–∞—Ç—ã –¥–æ–ª–∂–µ–Ω –Ω–∞–∂–∞—Ç—å **[–ù–ê–ß–ê–¢–¨]**, –∫–æ–≥–¥–∞ –≤—Å–µ –±—É–¥—É—Ç –≥–æ—Ç–æ–≤—ã.'.format(players)
            embed = discord.Embed(title=f'{owner.display_name} –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –ø–æ–∏–≥—Ä–∞—Ç—å –≤ —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É.',description=description,color=discordcolor)
            embed.set_author(name='–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞ v0.3')
            embed.set_footer(text=f'–ù–∞–∫–∞–∑–∞–Ω–∏–µ: {penalty_name}')
            embed.set_thumbnail(url='https://cdn-icons-png.flaticon.com/512/10/10967.png')
            await interaction.followup.edit_message(message_id=msg.id, embed=embed, view=buttonManagerMenu)
        else:
            await interaction.response.send_message('–í—ã —É–∂–µ –≤ –∏–≥—Ä–µ.',ephemeral=True)

    async def LeaveCallback(interaction: discord.Interaction):
        if interaction.user in roulette[msg.id]['alive']:
            roulette[msg.id]['alive'].remove(interaction.user)
            await interaction.response.send_message('–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –∏–≥—Ä—É, —Ç—Ä—É—Å–∏—à–∫–∞.',ephemeral=True)
            players = []
            for player in roulette[msg.id]['alive']:
                players.append(player.display_name)
            players = ', '.join(players)
            description = '–ü—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç–µ—Å—å –∫ –∏–≥—Ä–µ, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É **[–ü–†–ò–°–û–ï–î–ï–ù–ò–¢–¨–°–Ø]** –Ω–∏–∂–µ.\n\n–¢–µ–∫—É—â–∏–µ –∏–≥—Ä–æ–∫–∏: {}\n\n–°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–Ω–∞—Ç—ã –¥–æ–ª–∂–µ–Ω –Ω–∞–∂–∞—Ç—å **[–ù–ê–ß–ê–¢–¨]**, –∫–æ–≥–¥–∞ –≤—Å–µ –±—É–¥—É—Ç –≥–æ—Ç–æ–≤—ã.'.format(players)
            embed = discord.Embed(title=f'{owner.display_name} –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –ø–æ–∏–≥—Ä–∞—Ç—å –≤ —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É.',description=description,color=discordcolor)
            embed.set_author(name='–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞ v0.3')
            embed.set_thumbnail(url='https://cdn-icons-png.flaticon.com/512/10/10967.png')
            await interaction.followup.edit_message(message_id=msg.id, embed=embed, view=buttonManagerMenu)
        else:
            await interaction.response.send_message('–í—ã –Ω–µ –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.',ephemeral=True)

    async def StartCallback(interaction: discord.Interaction):
      if interaction.user == owner:
        if len(roulette[msg.id]['alive']) > 0:
            ShootButton = Button(label='–°–¢–†–ï–õ–Ø–¢–¨', emoji='‚ù§Ô∏è',style=discord.ButtonStyle.primary)
            SpinButton = Button(label='–ö–†–£–¢–ò–¢–¨ –ë–ê–†–ê–ë–ê–ù', emoji='‚ù§Ô∏è',style=discord.ButtonStyle.secondary)
            async def ShootCallback(interaction: discord.Interaction):
              if interaction.user == roulette[msg.id]['currentplayer']:
                SpinButton.disabled = False
                title = '–•–æ–¥ {}.'.format(roulette[msg.id]['currentplayer'].display_name)
                players = []
                currentplayer = roulette[msg.id]['currentplayer']
                if roulette[msg.id]['currentbullet'] in roulette[msg.id]['deathbullets']:
                    roulette[msg.id]['currentplayer'] = roulette[msg.id]['alive'][cycle(roulette[msg.id]['alive'].index(currentplayer)+1,0,len(roulette[msg.id]['alive'])-1)] 
                    roulette[msg.id]['dead'].append(interaction.user)
                    roulette[msg.id]['alive'].remove(interaction.user)
                    for player in roulette[msg.id]['alive']:
                        players.append(player.display_name)
                    players = ', '.join(players)
                    roulette[msg.id]['deathbullets'].remove(roulette[msg.id]['currentbullet'])
                    roulette[msg.id]['lastaction'] = f'{interaction.user.display_name} –≤—ã—Å—Ç—Ä–µ–ª–∏–≤–∞–µ—Ç... –í –°–ï–ë–Ø!'
                    description = '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {}\n\n–û—Å—Ç–∞–ª–∏—Å—å –≤ –∂–∏–≤—ã—Ö: {}\n\n{}, —Å—Ç—Ä–µ–ª—è–π –∏–ª–∏ –∫—Ä—É—Ç–∏ –±–∞—Ä–∞–±–∞–Ω.'.format(roulette[msg.id]['lastaction'],players, roulette[msg.id]['currentplayer'].display_name)
                    embed = discord.Embed(title=title,description=description,color=red)
                    try:
                        match penalty_value:
                            case '–∫–∏–∫':
                                role = getroleID(interaction.guild, interaction.user)
                                try:
                                    if interaction.guild.get_role(roles[role]) >= 3:
                                        await interaction.user.remove_roles(interaction.guild.get_role(roles[role]))
                                        await interaction.user.add_roles(interaction.guild.get_role(roles[7]))
                                    else:
                                        await interaction.user.kick(reason='–ü—Ä–æ–∏–≥—Ä–∞–ª –≤ —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É.')
                                except Exception: pass
                            case '–º—É—Ç':
                                mute_role = interaction.guild.get_role(1174411093670637660)
                                if mute_role not in interaction.user.roles: await interaction.user.add_roles(mute_role)
                                try: 
                                    current_channel = interaction.user.voice.channel
                                    afk_channel = bot.get_channel(776022980202987520)
                                    await interaction.user.move_to(afk_channel)
                                    await interaction.user.move_to(current_channel)
                                except Exception: pass
                            case '—Ç–∞–π–º-–∞—É—Ç':
                                try: await interaction.user.timeout(timedelta(seconds=60), reason='–ü—Ä–æ–∏–≥—Ä–∞–ª –≤ —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É.')
                                except Exception: pass
                            case '–ø–æ–Ω–∏–∂':
                                try:
                                    role = getroleID(interaction.guild, interaction.user)
                                    await interaction.user.remove_roles(interaction.guild.get_role(roles[role]))
                                    await interaction.user.add_roles(interaction.guild.get_role(roles[role+1]))
                                except Exception: pass
                            
                    except Exception: pass
                else:
                    roulette[msg.id]['lastaction'] = f'{interaction.user.display_name} –≤—ã—Å—Ç—Ä–µ–ª–∏–≤–∞–µ—Ç... —Ö–æ–ª–æ—Å—Ç–æ–π.'
                    roulette[msg.id]['currentplayer'] = roulette[msg.id]['alive'][cycle(roulette[msg.id]['alive'].index(currentplayer)+1,0,len(roulette[msg.id]['alive'])-1)] 
                    for player in roulette[msg.id]['alive']:
                        players.append(player.display_name)
                    players = ', '.join(players)
                    description = '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {}\n\n–û—Å—Ç–∞–ª–∏—Å—å –≤ –∂–∏–≤—ã—Ö: {}\n\n{}, —Å—Ç—Ä–µ–ª—è–π –∏–ª–∏ –∫—Ä—É—Ç–∏ –±–∞—Ä–∞–±–∞–Ω.'.format(roulette[msg.id]['lastaction'],players, roulette[msg.id]['currentplayer'].display_name)
                    embed = discord.Embed(title=title,description=description,color=green)
                embed.set_footer(text=f'–ù–∞–∫–∞–∑–∞–Ω–∏–µ: {penalty_name}')
                roulette[msg.id]['currentbullet'] = cycle(roulette[msg.id]['currentbullet']+1, 1, 6)
                embed.set_author(name='–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞ v0.3')
                embed.set_thumbnail(url=roulette[msg.id]['currentplayer'].avatar)
                SpinButton.disabled = True
                ShootButton.disabled = True
                await interaction.response.edit_message(embed=embed, view=buttonManagerGame) 

                if len(roulette[msg.id]['alive']) == 0:
                    await asyncio.sleep(8)
                    players = []
                    for player in roulette[msg.id]['dead']:
                        players.append(player.display_name)
                    players = ', '.join(players)
                    embed = discord.Embed(title='–í—Å–µ –∏–≥—Ä–æ–∫–∏ –º–µ—Ä—Ç–≤—ã.',description=f'–°–ø–∏—Å–æ–∫ –º–µ—Ä—Ç–≤—ã—Ö: {players}.',color=red)
                    embed.set_author(name='–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞ v0.3')
                    embed.set_footer(text=f'–ù–∞–∫–∞–∑–∞–Ω–∏–µ: {penalty_name}')
                    embed.set_thumbnail(url='https://media.forgecdn.net/avatars/496/695/637811735967861165.png')
                    await interaction.followup.edit_message(message_id=msg.id,embed=embed, view=None) 
                else:
                    if len(roulette[msg.id]['deathbullets']) == 0:
                        await asyncio.sleep(6)
                        players = []
                        for player in roulette[msg.id]['alive']:
                            players.append(player.display_name)
                        players = ', '.join(players)
                        deads = []
                        for dead in roulette[msg.id]['dead']:
                            deads.append(dead.display_name)
                        deads = ', '.join(deads)
                        embed = discord.Embed(title='–ü–∞—Ç—Ä–æ–Ω—ã –≤ —Ä–µ–≤–æ–ª—å–≤–µ—Ä–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.',description=f'–°–ø–∏—Å–æ–∫ –≤—ã–∂–∏–≤—à–∏—Ö: {players}.\n\n–°–ø–∏—Å–æ–∫ –º–µ—Ä—Ç–≤—ã—Ö: {deads}', color=yellow)
                        embed.set_thumbnail(url='https://www.pngall.com/wp-content/uploads/14/Happy-Emoji-Transparent.png')
                        embed.set_author(name='–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞ v0.3')
                        embed.set_footer(text=f'–ù–∞–∫–∞–∑–∞–Ω–∏–µ: {penalty_name}')
                        await interaction.followup.edit_message(message_id=msg.id,embed=embed, view=None) 
                    else:
                        await asyncio.sleep(2)
                        SpinButton.disabled = False
                        ShootButton.disabled = False
                        title = '–•–æ–¥ {}.'.format(roulette[msg.id]['currentplayer'].display_name)
                        embed = discord.Embed(title=title,description=description,color=green)
                        embed.set_thumbnail(url=roulette[msg.id]['currentplayer'].avatar)
                        embed.set_author(name='–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞ v0.3')
                        embed.set_footer(text=f'–ù–∞–∫–∞–∑–∞–Ω–∏–µ: {penalty_name}')
                        await interaction.followup.edit_message(message_id=msg.id,embed=embed, view=buttonManagerGame) 
              else:
                  await interaction.response.send_message('–°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥.', ephemeral=True,delete_after=5)
            async def SpinCallback(interaction: discord.Interaction):
                if interaction.user == roulette[msg.id]['currentplayer']:
                    roulette[msg.id]['currentbullet'] = random.randint(1,6)
                    roulette[msg.id]['lastaction'] = f'{interaction.user.display_name} –∫—Ä—É—Ç–∏—Ç –±–∞—Ä–∞–±–∞–Ω.'
                    title = '–•–æ–¥ {}.'.format(roulette[msg.id]['currentplayer'].display_name)
                    description = '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {}\n\n–û—Å—Ç–∞–ª–∏—Å—å –≤ –∂–∏–≤—ã—Ö: {}\n\n{}, —Å—Ç—Ä–µ–ª—è–π. –ë–µ–∂–∞—Ç—å –Ω–µ–∫—É–¥–∞.'.format(roulette[msg.id]['lastaction'],players, roulette[msg.id]['currentplayer'].display_name)
                    embed = discord.Embed(title=title,description=description,color=yellow)
                    embed.set_author(name='–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞ v0.3')
                    embed.set_thumbnail(url=roulette[msg.id]['currentplayer'].avatar)
                    embed.set_footer(text=f'–ù–∞–∫–∞–∑–∞–Ω–∏–µ: {penalty_name}')
                    SpinButton.disabled = True
                    await interaction.response.edit_message(embed=embed, view=buttonManagerGame)  
                else:
                    await interaction.response.send_message('–°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥.', ephemeral=True,delete_after=5)

            ShootButton.callback = ShootCallback
            SpinButton.callback = SpinCallback

            buttonManagerGame = View(timeout=None)

            buttonManagerGame.add_item(ShootButton)
            buttonManagerGame.add_item(SpinButton)

            roulette[msg.id]['currentbullet'] = random.randint(1,6)
            players = []
            for player in roulette[msg.id]['alive']:
                players.append(player.display_name)
            players = ', '.join(players)
            roulette[msg.id]['currentplayer'] = roulette[msg.id]['alive'][random.randint(0,len(roulette[msg.id]['alive'])-1)]
            title = '–•–æ–¥ {}.'.format(roulette[msg.id]['currentplayer'].display_name)
            description = '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {}\n\n–û—Å—Ç–∞–ª–∏—Å—å –≤ –∂–∏–≤—ã—Ö: {}\n\n{}, —Å—Ç—Ä–µ–ª—è–π –∏–ª–∏ –∫—Ä—É—Ç–∏ –±–∞—Ä–∞–±–∞–Ω.'.format(roulette[msg.id]['lastaction'],players, roulette[msg.id]['currentplayer'].display_name)
            embed = discord.Embed(title=title,description=description,color=green)
            embed.set_author(name='–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞ v0.3')
            embed.set_thumbnail(url=roulette[msg.id]['currentplayer'].avatar)
            embed.set_footer(text=f'–ù–∞–∫–∞–∑–∞–Ω–∏–µ: {penalty_name}')
            await interaction.response.edit_message(embed=embed, view=buttonManagerGame)   
        else:
            await interaction.response.send_message('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤.', ephemeral=True, delete_after=5)
      else:
          await interaction.response.send_message('–í—ã –Ω–µ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–Ω–∞—Ç—ã.', ephemeral=True, delete_after=5)
    JoinButton.callback = JoinCallback
    LeaveButton.callback = LeaveCallback
    StartButton.callback = StartCallback
    
    buttonManagerMenu.add_item(JoinButton)
    buttonManagerMenu.add_item(LeaveButton)
    buttonManagerMenu.add_item(StartButton)

    alive = []
    alive.append(interaction.user)
    deathbullets = []
    maxbullet = bullet.value
    while maxbullet > 0:
        tempbullet = random.randint(1,6)
        if tempbullet not in deathbullets:
            deathbullets.append(tempbullet)
            maxbullet= maxbullet - 1


    players =  f'{interaction.user.display_name}'
    description = '–ü—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç–µ—Å—å –∫ –∏–≥—Ä–µ, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É **[–ü–†–ò–°–û–ï–î–ï–ù–ò–¢–¨–°–Ø]** –Ω–∏–∂–µ.\n\n–¢–µ–∫—É—â–∏–µ –∏–≥—Ä–æ–∫–∏: {}\n\n–°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–Ω–∞—Ç—ã –¥–æ–ª–∂–µ–Ω –Ω–∞–∂–∞—Ç—å **[–ù–ê–ß–ê–¢–¨]**, –∫–æ–≥–¥–∞ –≤—Å–µ –±—É–¥—É—Ç –≥–æ—Ç–æ–≤—ã.'.format(players)
    embed = discord.Embed(title=f'{owner.display_name} –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –ø–æ–∏–≥—Ä–∞—Ç—å –≤ —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É.',description=description,color=discordcolor)
    embed.set_author(name='–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞ v0.3')
    embed.set_thumbnail(url='https://cdn-icons-png.flaticon.com/512/10/10967.png')
    embed.set_footer(text=f'–ù–∞–∫–∞–∑–∞–Ω–∏–µ: {penalty.name}')

    await interaction.response.send_message(embed=embed, view=buttonManagerMenu)
    msg = await interaction.original_response()
    roulette[msg.id] = {'dead' : [], 'alive': alive, 'deathbullets' : deathbullets, 'currentbullet' : 1, 'currentplayer': None, 'lastaction': ''}

    

@bot.tree.command(name='–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å', description='–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ —Å–≤–æ–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π/—Å–∫—Ä—ã—Ç—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª.')
@app_commands.describe(target_user = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.' )
async def invitetochannel(interaction: discord.Interaction, target_user: discord.User):
    
    if interaction.user.voice.channel in tempchannels:
        voice_channel = interaction.user.voice.channel
        permissions = voice_channel.permissions_for(interaction.user)
        if permissions.manage_channels:
            await voice_channel.set_permissions(target_user, view_channel= True, connect = True)
            await interaction.response.send_message(f'{target_user.display_name} –±—ã–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω –≤ –≤–∞—à –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª.', ephemeral=True, delete_after=5)
        else:
            await interaction.response.send_message(f'–≠—Ç–æ –Ω–µ –≤–∞—à –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª.', ephemeral=True, delete_after=5)
    else: await interaction.response.send_message('–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.', ephemeral=True, delete_after=5)

@bot.tree.command(name='—Å—Ç–∏—Ä–∞–Ω–∏–µ', description='–ù–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨ –ë–ï–ó –í–ï–°–û–ú–´–• –ü–†–ò–ß–ò–ù!')
async def reset(interaction: discord.Interaction):
    if interaction.user.name in moderator_list:
        if os.path.exists("obsdata.json"):
            # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
            os.remove("obsdata.json")
            print(f'–§–∞–π–ª {"obsdata.json"} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.')
        else:
            print(f'–§–∞–π–ª {"obsdata.json"} –Ω–µ –Ω–∞–π–¥–µ–Ω.')
        check_inventory_file()
        await interaction.response.send_message('–§–ê–ô–õ –° –î–ê–ù–ù–´–ú–ò –í–°–ï–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –£–°–ü–ï–®–ù–û –£–ù–ò–ß–¢–û–ñ–ï–ù.', ephemeral=True)
        os.remove("inventory.json")
    else: await interaction.response.send_message('–ò–¥–∏ –Ω–∞—Ö—É–π', ephemeral=True,delete_after=1)

@bot.tree.command(name='–¥–∞—Ç–∞—Ü–µ–Ω—Ç—Ä')
@app_commands.describe(newdata='–û—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –Ω–∏—á–µ–≥–æ —Å–ª–æ–º–∞—Ç—å.')
async def datasend(interaction: discord.Interaction, newdata: str = ''):
    if interaction.user.name in moderator_list:
        if newdata == '':
            data = str(load_data())
            data = data.replace("'", '"')
            print(data)
            await interaction.response.send_message(data, ephemeral=True)
        else:
            newdata = newdata.replace("'", '"')
            with open("obsdata.json", "w") as file:
                file.write(str(newdata))
            await interaction.response.send_message(newdata, ephemeral=True)


@bot.event
async def on_message(message):
    if message.channel.id == votes_channel and not message.author.bot:
        await message.delete()

@bot.tree.command(name='–æ—á–∏—Å—Ç–∫–∞', description='–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è. –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.')
@app_commands.describe(amount='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π.' )
async def clear_messages(interaction: discord.Interaction, amount: int = 1):
        try: await interaction.response.send_message('–°–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.',ephemeral=True, delete_after=5 )  
        except Exception: pass
        await interaction.channel.purge(limit=amount)  

@bot.event
async def on_member_join(member):
    await member.add_roles(member.guild.get_role(ROLE6ID))
    print(f'{member.name} –∑–∞—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä.')

def cycle(number, minim, maxim):
    if number > maxim: return minim
    elif number < minim: return maxim
    else: return number
# –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ —Å –≤–∞—à–∏–º —Ç–æ–∫–µ–Ω–æ–º
bot.run(TOKEN)
